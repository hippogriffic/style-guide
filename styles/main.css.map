{
	"version": 3,
	"file": "main.css",
	"sources": [
		"../sass/main.sass",
		"../sass/_imports.sass",
		"../node_modules/bourbon/app/assets/stylesheets/_bourbon.scss",
		"../node_modules/bourbon/app/assets/stylesheets/settings/_prefixer.scss",
		"../node_modules/bourbon/app/assets/stylesheets/settings/_px-to-em.scss",
		"../node_modules/bourbon/app/assets/stylesheets/settings/_asset-pipeline.scss",
		"../node_modules/bourbon/app/assets/stylesheets/functions/_assign-inputs.scss",
		"../node_modules/bourbon/app/assets/stylesheets/functions/_contains.scss",
		"../node_modules/bourbon/app/assets/stylesheets/functions/_contains-falsy.scss",
		"../node_modules/bourbon/app/assets/stylesheets/functions/_is-length.scss",
		"../node_modules/bourbon/app/assets/stylesheets/functions/_is-light.scss",
		"../node_modules/bourbon/app/assets/stylesheets/functions/_is-number.scss",
		"../node_modules/bourbon/app/assets/stylesheets/functions/_is-size.scss",
		"../node_modules/bourbon/app/assets/stylesheets/functions/_px-to-em.scss",
		"../node_modules/bourbon/app/assets/stylesheets/functions/_px-to-rem.scss",
		"../node_modules/bourbon/app/assets/stylesheets/functions/_shade.scss",
		"../node_modules/bourbon/app/assets/stylesheets/functions/_strip-units.scss",
		"../node_modules/bourbon/app/assets/stylesheets/functions/_tint.scss",
		"../node_modules/bourbon/app/assets/stylesheets/functions/_transition-property-name.scss",
		"../node_modules/bourbon/app/assets/stylesheets/functions/_unpack.scss",
		"../node_modules/bourbon/app/assets/stylesheets/functions/_modular-scale.scss",
		"../node_modules/bourbon/app/assets/stylesheets/helpers/_convert-units.scss",
		"../node_modules/bourbon/app/assets/stylesheets/helpers/_directional-values.scss",
		"../node_modules/bourbon/app/assets/stylesheets/helpers/_font-source-declaration.scss",
		"../node_modules/bourbon/app/assets/stylesheets/helpers/_gradient-positions-parser.scss",
		"../node_modules/bourbon/app/assets/stylesheets/helpers/_linear-angle-parser.scss",
		"../node_modules/bourbon/app/assets/stylesheets/helpers/_linear-gradient-parser.scss",
		"../node_modules/bourbon/app/assets/stylesheets/helpers/_linear-positions-parser.scss",
		"../node_modules/bourbon/app/assets/stylesheets/helpers/_linear-side-corner-parser.scss",
		"../node_modules/bourbon/app/assets/stylesheets/helpers/_radial-arg-parser.scss",
		"../node_modules/bourbon/app/assets/stylesheets/helpers/_radial-positions-parser.scss",
		"../node_modules/bourbon/app/assets/stylesheets/helpers/_radial-gradient-parser.scss",
		"../node_modules/bourbon/app/assets/stylesheets/helpers/_render-gradients.scss",
		"../node_modules/bourbon/app/assets/stylesheets/helpers/_shape-size-stripper.scss",
		"../node_modules/bourbon/app/assets/stylesheets/helpers/_str-to-num.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_animation.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_appearance.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_backface-visibility.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_background.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_background-image.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_border-image.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_calc.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_columns.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_filter.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_flex-box.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_font-face.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_font-feature-settings.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_hidpi-media-query.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_hyphens.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_image-rendering.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_keyframes.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_linear-gradient.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_perspective.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_placeholder.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_radial-gradient.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_selection.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_text-decoration.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_transform.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_transition.scss",
		"../node_modules/bourbon/app/assets/stylesheets/css3/_user-select.scss",
		"../node_modules/bourbon/app/assets/stylesheets/addons/_border-color.scss",
		"../node_modules/bourbon/app/assets/stylesheets/addons/_border-radius.scss",
		"../node_modules/bourbon/app/assets/stylesheets/addons/_border-style.scss",
		"../node_modules/bourbon/app/assets/stylesheets/addons/_border-width.scss",
		"../node_modules/bourbon/app/assets/stylesheets/addons/_buttons.scss",
		"../node_modules/bourbon/app/assets/stylesheets/addons/_clearfix.scss",
		"../node_modules/bourbon/app/assets/stylesheets/addons/_ellipsis.scss",
		"../node_modules/bourbon/app/assets/stylesheets/addons/_font-stacks.scss",
		"../node_modules/bourbon/app/assets/stylesheets/addons/_hide-text.scss",
		"../node_modules/bourbon/app/assets/stylesheets/addons/_margin.scss",
		"../node_modules/bourbon/app/assets/stylesheets/addons/_padding.scss",
		"../node_modules/bourbon/app/assets/stylesheets/addons/_position.scss",
		"../node_modules/bourbon/app/assets/stylesheets/addons/_prefixer.scss",
		"../node_modules/bourbon/app/assets/stylesheets/addons/_retina-image.scss",
		"../node_modules/bourbon/app/assets/stylesheets/addons/_size.scss",
		"../node_modules/bourbon/app/assets/stylesheets/addons/_text-inputs.scss",
		"../node_modules/bourbon/app/assets/stylesheets/addons/_timing-functions.scss",
		"../node_modules/bourbon/app/assets/stylesheets/addons/_triangle.scss",
		"../node_modules/bourbon/app/assets/stylesheets/addons/_word-wrap.scss",
		"../node_modules/bourbon/app/assets/stylesheets/_bourbon-deprecated-upcoming.scss",
		"../bower_components/incuna-transitions/hover/_hover.sass",
		"../bower_components/incuna-transitions/hover/effects/_variables.sass",
		"../bower_components/incuna-transitions/hover/effects/_prefixes.sass",
		"../bower_components/incuna-transitions/hover/effects/_keyframes.sass",
		"../bower_components/incuna-transitions/hover/effects/_hacks.sass",
		"../bower_components/incuna-transitions/hover/effects/_2d-transitions.sass",
		"../bower_components/incuna-transitions/hover/effects/2d-transitions/_grow.sass",
		"../bower_components/incuna-transitions/hover/effects/2d-transitions/_shrink.sass",
		"../bower_components/incuna-transitions/hover/effects/2d-transitions/_pulse.sass",
		"../bower_components/incuna-transitions/hover/effects/2d-transitions/_pulse-grow.sass",
		"../bower_components/incuna-transitions/hover/effects/2d-transitions/_pulse-shrink.sass",
		"../bower_components/incuna-transitions/hover/effects/2d-transitions/_push.sass",
		"../bower_components/incuna-transitions/hover/effects/2d-transitions/_pop.sass",
		"../bower_components/incuna-transitions/hover/effects/2d-transitions/_bounce.sass",
		"../bower_components/incuna-transitions/hover/effects/2d-transitions/_rotate.sass",
		"../bower_components/incuna-transitions/hover/effects/2d-transitions/_grow-rotate.sass",
		"../bower_components/incuna-transitions/hover/effects/2d-transitions/_float.sass",
		"../bower_components/incuna-transitions/hover/effects/2d-transitions/_bob.sass",
		"../bower_components/incuna-transitions/hover/effects/2d-transitions/_hang.sass",
		"../bower_components/incuna-transitions/hover/effects/2d-transitions/_skew.sass",
		"../bower_components/incuna-transitions/hover/effects/2d-transitions/_skew-forward.sass",
		"../bower_components/incuna-transitions/hover/effects/2d-transitions/_skew-backward.sass",
		"../bower_components/incuna-transitions/hover/effects/2d-transitions/_wobble-move.sass",
		"../bower_components/incuna-transitions/hover/effects/2d-transitions/_wobble-fixed.sass",
		"../bower_components/incuna-transitions/hover/effects/2d-transitions/_buzz.sass",
		"../bower_components/incuna-transitions/hover/effects/2d-transitions/_buzz-out.sass",
		"../bower_components/incuna-transitions/hover/effects/_background-transitions.sass",
		"../bower_components/incuna-transitions/hover/effects/background-transitions/_fade.sass",
		"../bower_components/incuna-transitions/hover/effects/background-transitions/_back-pulse.sass",
		"../bower_components/incuna-transitions/hover/effects/background-transitions/_sweep.sass",
		"../bower_components/incuna-transitions/hover/effects/background-transitions/_bounce-to.sass",
		"../bower_components/incuna-transitions/hover/effects/background-transitions/_radial.sass",
		"../bower_components/incuna-transitions/hover/effects/background-transitions/_rectangle.sass",
		"../bower_components/incuna-transitions/hover/effects/background-transitions/_shutter-in-horizontal.sass",
		"../bower_components/incuna-transitions/hover/effects/background-transitions/_shutter-out-horizontal.sass",
		"../bower_components/incuna-transitions/hover/effects/background-transitions/_shutter-in-vertical.sass",
		"../bower_components/incuna-transitions/hover/effects/background-transitions/_shutter-out-vertical.sass",
		"../bower_components/incuna-transitions/hover/effects/_border-transitions.sass",
		"../bower_components/incuna-transitions/hover/effects/border-transitions/_border-fade.sass",
		"../bower_components/incuna-transitions/hover/effects/border-transitions/_hollow.sass",
		"../bower_components/incuna-transitions/hover/effects/border-transitions/_trim.sass",
		"../bower_components/incuna-transitions/hover/effects/border-transitions/_ripple-out.sass",
		"../bower_components/incuna-transitions/hover/effects/border-transitions/_ripple-in.sass",
		"../bower_components/incuna-transitions/hover/effects/border-transitions/_outline-out.sass",
		"../bower_components/incuna-transitions/hover/effects/border-transitions/_outline-in.sass",
		"../bower_components/incuna-transitions/hover/effects/border-transitions/_round-corners.sass",
		"../bower_components/incuna-transitions/hover/effects/border-transitions/_underline.sass",
		"../bower_components/incuna-transitions/hover/effects/border-transitions/_overline-from-left.sass",
		"../bower_components/incuna-transitions/hover/effects/border-transitions/_overline-from-center.sass",
		"../bower_components/incuna-transitions/hover/effects/border-transitions/_overline-from-right.sass",
		"../bower_components/incuna-transitions/hover/effects/border-transitions/_reveal.sass",
		"../bower_components/incuna-transitions/hover/effects/border-transitions/_underline-reveal.sass",
		"../bower_components/incuna-transitions/hover/effects/border-transitions/_overline-reveal.sass",
		"../bower_components/incuna-transitions/hover/effects/_icon-transitions.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-back.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-forward.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-down.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-up.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-spin.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-drop.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-fade.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-float-away.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-sink-away.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-grow.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-shrink.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-pulse.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-pulse-grow.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-pulse-shrink.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-push.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-pop.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-bounce.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-rotate.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-grow-rotate.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-float.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-sink.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-bob.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-hang.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-wobble-horizontal.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-wobble-vertical.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-buzz.sass",
		"../bower_components/incuna-transitions/hover/effects/icon-transitions/_icon-buzz-out.sass",
		"../bower_components/incuna-transitions/hover/effects/_shadow-and-glow-transitions.sass",
		"../bower_components/incuna-transitions/hover/effects/shadow-and-glow-transitions/_glow.sass",
		"../bower_components/incuna-transitions/hover/effects/shadow-and-glow-transitions/_shadow.sass",
		"../bower_components/incuna-transitions/hover/effects/shadow-and-glow-transitions/_grow-shadow.sass",
		"../bower_components/incuna-transitions/hover/effects/shadow-and-glow-transitions/_box-shadow-outset.sass",
		"../bower_components/incuna-transitions/hover/effects/shadow-and-glow-transitions/_box-shadow-inset.sass",
		"../bower_components/incuna-transitions/hover/effects/shadow-and-glow-transitions/_float-shadow.sass",
		"../bower_components/incuna-transitions/hover/effects/shadow-and-glow-transitions/_shadow-radial.sass",
		"../bower_components/incuna-transitions/hover/effects/_speech-bubbles.sass",
		"../bower_components/incuna-transitions/hover/effects/speech-bubbles/_bubble-top.sass",
		"../bower_components/incuna-transitions/hover/effects/speech-bubbles/_bubble-right.sass",
		"../bower_components/incuna-transitions/hover/effects/speech-bubbles/_bubble-bottom.sass",
		"../bower_components/incuna-transitions/hover/effects/speech-bubbles/_bubble-left.sass",
		"../bower_components/incuna-transitions/hover/effects/speech-bubbles/_bubble-float-top.sass",
		"../bower_components/incuna-transitions/hover/effects/speech-bubbles/_bubble-float-right.sass",
		"../bower_components/incuna-transitions/hover/effects/speech-bubbles/_bubble-float-bottom.sass",
		"../bower_components/incuna-transitions/hover/effects/speech-bubbles/_bubble-float-left.sass",
		"../bower_components/incuna-transitions/animations/_state-transitions.sass",
		"../bower_components/incuna-transitions/animations/state-transitions/_animate-transition.sass",
		"../bower_components/incuna-transitions/animations/state-transitions/_expand-from.sass",
		"../bower_components/incuna-transitions/animations/state-transitions/_shrink-to.sass",
		"../bower_components/incuna-sass/incuna-sass/_functions.sass",
		"../bower_components/incuna-sass/incuna-sass/_variables.sass",
		"../bower_components/incuna-sass/incuna-sass/functions/_em.sass",
		"../bower_components/incuna-sass/incuna-sass/functions/_rem.sass",
		"../bower_components/incuna-sass/incuna-sass/functions/_headings.sass",
		"../bower_components/incuna-sass/incuna-sass/functions/_url-functions.sass",
		"../bower_components/incuna-sass/incuna-sass/_normalize.sass",
		"../bower_components/incuna-sass/incuna-sass/_incuna-normalize.sass",
		"../sass/globals/_variables.sass",
		"../sass/globals/_colors.sass",
		"../sass/components/_colors.sass",
		"../sass/components/_icons.sass",
		"../sass/components/_buttons.sass",
		"../sass/page/_style-guide-page.sass"
	],
	"sourcesContent": [
		"@import \"imports\";\n",
		"// Bourbon\n@import \"bourbon\";\n// disable vendor prefix for old opera\n$prefix-for-opera: false;\n\n// Incuna transitions\n@import \"hover/hover\";\n@import \"animations/state-transitions\";\n\n// Incuna-sass\n@import \"incuna-sass/functions\";\n@import \"incuna-sass/normalize\";\n@import \"incuna-sass/incuna-normalize\";\n\n// Library styles\n@import \"globals/variables\";\n@import \"globals/colors\";\n\n@import \"components/colors\";\n@import \"components/icons\";\n@import \"components/buttons\";\n\n@import \"page/style-guide-page\";\n",
		"// Bourbon 4.2.3\n// http://bourbon.io\n// Copyright 2011-2015 thoughtbot, inc.\n// MIT License\n\n@import \"settings/prefixer\";\n@import \"settings/px-to-em\";\n@import \"settings/asset-pipeline\";\n\n@import \"functions/assign-inputs\";\n@import \"functions/contains\";\n@import \"functions/contains-falsy\";\n@import \"functions/is-length\";\n@import \"functions/is-light\";\n@import \"functions/is-number\";\n@import \"functions/is-size\";\n@import \"functions/px-to-em\";\n@import \"functions/px-to-rem\";\n@import \"functions/shade\";\n@import \"functions/strip-units\";\n@import \"functions/tint\";\n@import \"functions/transition-property-name\";\n@import \"functions/unpack\";\n@import \"functions/modular-scale\";\n\n@import \"helpers/convert-units\";\n@import \"helpers/directional-values\";\n@import \"helpers/font-source-declaration\";\n@import \"helpers/gradient-positions-parser\";\n@import \"helpers/linear-angle-parser\";\n@import \"helpers/linear-gradient-parser\";\n@import \"helpers/linear-positions-parser\";\n@import \"helpers/linear-side-corner-parser\";\n@import \"helpers/radial-arg-parser\";\n@import \"helpers/radial-positions-parser\";\n@import \"helpers/radial-gradient-parser\";\n@import \"helpers/render-gradients\";\n@import \"helpers/shape-size-stripper\";\n@import \"helpers/str-to-num\";\n\n@import \"css3/animation\";\n@import \"css3/appearance\";\n@import \"css3/backface-visibility\";\n@import \"css3/background\";\n@import \"css3/background-image\";\n@import \"css3/border-image\";\n@import \"css3/calc\";\n@import \"css3/columns\";\n@import \"css3/filter\";\n@import \"css3/flex-box\";\n@import \"css3/font-face\";\n@import \"css3/font-feature-settings\";\n@import \"css3/hidpi-media-query\";\n@import \"css3/hyphens\";\n@import \"css3/image-rendering\";\n@import \"css3/keyframes\";\n@import \"css3/linear-gradient\";\n@import \"css3/perspective\";\n@import \"css3/placeholder\";\n@import \"css3/radial-gradient\";\n@import \"css3/selection\";\n@import \"css3/text-decoration\";\n@import \"css3/transform\";\n@import \"css3/transition\";\n@import \"css3/user-select\";\n\n@import \"addons/border-color\";\n@import \"addons/border-radius\";\n@import \"addons/border-style\";\n@import \"addons/border-width\";\n@import \"addons/buttons\";\n@import \"addons/clearfix\";\n@import \"addons/ellipsis\";\n@import \"addons/font-stacks\";\n@import \"addons/hide-text\";\n@import \"addons/margin\";\n@import \"addons/padding\";\n@import \"addons/position\";\n@import \"addons/prefixer\";\n@import \"addons/retina-image\";\n@import \"addons/size\";\n@import \"addons/text-inputs\";\n@import \"addons/timing-functions\";\n@import \"addons/triangle\";\n@import \"addons/word-wrap\";\n\n@import \"bourbon-deprecated-upcoming\";\n",
		"@charset \"UTF-8\";\n\n/// Global variables to enable or disable vendor prefixes\n\n$prefix-for-webkit:    true !default;\n$prefix-for-mozilla:   true !default;\n$prefix-for-microsoft: true !default;\n$prefix-for-opera:     true !default;\n$prefix-for-spec:      true !default;\n",
		"$em-base: 16px !default;\n",
		"@charset \"UTF-8\";\n\n/// A global setting to enable or disable the `$asset-pipeline` variable for all functions that accept it.\n///\n/// @type Bool\n\n$asset-pipeline: false !default;\n",
		"@function assign-inputs($inputs, $pseudo: null) {\n  $list: ();\n\n  @each $input in $inputs {\n    $input: unquote($input);\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\n    $list: append($list, $input, comma);\n  }\n\n  @return $list;\n}\n",
		"@charset \"UTF-8\";\n\n/// Checks if a list contains a value(s).\n///\n/// @access private\n///\n/// @param {List} $list\n///   The list to check against.\n///\n/// @param {List} $values\n///   A single value or list of values to check for.\n///\n/// @example scss - Usage\n///   contains($list, $value)\n///\n/// @return {Bool}\n\n@function contains($list, $values...) {\n  @each $value in $values {\n    @if type-of(index($list, $value)) != \"number\" {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n",
		"@charset \"UTF-8\";\n\n/// Checks if a list does not contains a value.\n///\n/// @access private\n///\n/// @param {List} $list\n///   The list to check against.\n///\n/// @return {Bool}\n\n@function contains-falsy($list) {\n  @each $item in $list {\n    @if not $item {\n      @return true;\n    }\n  }\n\n  @return false;\n}\n",
		"@charset \"UTF-8\";\n\n/// Checks for a valid CSS length.\n///\n/// @param {String} $value\n\n@function is-length($value) {\n  @return type-of($value) != \"null\" and (str-slice($value + \"\", 1, 4) == \"calc\"\n       or index(auto inherit initial 0, $value)\n       or (type-of($value) == \"number\" and not(unitless($value))));\n}\n",
		"@charset \"UTF-8\";\n\n/// Programatically determines whether a color is light or dark.\n///\n/// @link http://robots.thoughtbot.com/closer-look-color-lightness\n///\n/// @param {Color (Hex)} $color\n///\n/// @example scss - Usage\n///   is-light($color)\n///\n/// @return {Bool}\n\n@function is-light($hex-color) {\n  $-local-red: red(rgba($hex-color, 1));\n  $-local-green: green(rgba($hex-color, 1));\n  $-local-blue: blue(rgba($hex-color, 1));\n  $-local-lightness: ($-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722) / 255;\n\n  @return $-local-lightness > 0.6;\n}\n",
		"@charset \"UTF-8\";\n\n/// Checks for a valid number.\n///\n/// @param {Number} $value\n///\n/// @require {function} contains\n\n@function is-number($value) {\n  @return contains(\"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" 0 1 2 3 4 5 6 7 8 9, $value);\n}\n",
		"@charset \"UTF-8\";\n\n/// Checks for a valid CSS size.\n///\n/// @param {String} $value\n///\n/// @require {function} contains\n/// @require {function} is-length\n\n@function is-size($value) {\n  @return is-length($value)\n          or contains(\"fill\" \"fit-content\" \"min-content\" \"max-content\", $value);\n}\n",
		"// Convert pixels to ems\n// eg. for a relational value of 12px write em(12) when the parent is 16px\n// if the parent is another value say 24px write em(12, 24)\n\n@function em($pxval, $base: $em-base) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1em;\n}\n",
		"// Convert pixels to rems\n// eg. for a relational value of 12px write rem(12)\n// Assumes $em-base is the font-size of <html>\n\n@function rem($pxval) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n\n  $base: $em-base;\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1rem;\n}\n",
		"@charset \"UTF-8\";\n\n/// Mixes a color with black.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of black to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: shade(#ffbb52, 60%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #664a20;\n///   }\n///\n/// @return {Color}\n\n@function shade($color, $percent) {\n  @return mix(#000, $color, $percent);\n}\n",
		"@charset \"UTF-8\";\n\n/// Strips the unit from a number.\n///\n/// @param {Number (With Unit)} $value\n///\n/// @example scss - Usage\n///   $dimension: strip-units(10em);\n///\n/// @example css - CSS Output\n///   $dimension: 10;\n///\n/// @return {Number (Unitless)}\n\n@function strip-units($value) {\n  @return ($value / ($value * 0 + 1));\n}\n",
		"@charset \"UTF-8\";\n\n/// Mixes a color with white.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of white to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: tint(#6ecaa6, 40%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #a8dfc9;\n///   }\n///\n/// @return {Color}\n\n@function tint($color, $percent) {\n  @return mix(#fff, $color, $percent);\n}\n",
		"// Return vendor-prefixed property names if appropriate\n// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background\n//************************************************************************//\n@function transition-property-names($props, $vendor: false) {\n  $new-props: ();\n\n  @each $prop in $props {\n    $new-props: append($new-props, transition-property-name($prop, $vendor), comma);\n  }\n\n  @return $new-props;\n}\n\n@function transition-property-name($prop, $vendor: false) {\n  // put other properties that need to be prefixed here aswell\n  @if $vendor and $prop == transform {\n    @return unquote('-'+$vendor+'-'+$prop);\n  }\n  @else {\n    @return $prop;\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Converts shorthand to the 4-value syntax.\n///\n/// @param {List} $shorthand\n///\n/// @example scss - Usage\n///   .element {\n///     margin: unpack(1em 2em);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     margin: 1em 2em 1em 2em;\n///   }\n\n@function unpack($shorthand) {\n  @if length($shorthand) == 1 {\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\n  } @else if length($shorthand) == 2 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\n  } @else if length($shorthand) == 3 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\n  } @else {\n    @return $shorthand;\n  }\n}\n",
		"// Scaling Variables\n$golden:           1.618;\n$minor-second:     1.067;\n$major-second:     1.125;\n$minor-third:      1.2;\n$major-third:      1.25;\n$perfect-fourth:   1.333;\n$augmented-fourth: 1.414;\n$perfect-fifth:    1.5;\n$minor-sixth:      1.6;\n$major-sixth:      1.667;\n$minor-seventh:    1.778;\n$major-seventh:    1.875;\n$octave:           2;\n$major-tenth:      2.5;\n$major-eleventh:   2.667;\n$major-twelfth:    3;\n$double-octave:    4;\n\n$modular-scale-ratio: $perfect-fourth !default;\n$modular-scale-base: em($em-base) !default;\n\n@function modular-scale($increment, $value: $modular-scale-base, $ratio: $modular-scale-ratio) {\n  $v1: nth($value, 1);\n  $v2: nth($value, length($value));\n  $value: $v1;\n\n  // scale $v2 to just above $v1\n  @while $v2 > $v1 {\n    $v2: ($v2 / $ratio); // will be off-by-1\n  }\n  @while $v2 < $v1 {\n    $v2: ($v2 * $ratio); // will fix off-by-1\n  }\n\n  // check AFTER scaling $v2 to prevent double-counting corner-case\n  $double-stranded: $v2 > $v1;\n\n  @if $increment > 0 {\n    @for $i from 1 through $increment {\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\n        $value: $v2;\n        $v2: ($v2 * $ratio);\n      } @else {\n        $v1: ($v1 * $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @if $increment < 0 {\n    // adjust $v2 to just below $v1\n    @if $double-stranded {\n      $v2: ($v2 / $ratio);\n    }\n\n    @for $i from $increment through -1 {\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\n        $value: $v2;\n        $v2: ($v2 / $ratio);\n      } @else {\n        $v1: ($v1 / $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @return $value;\n}\n",
		"//************************************************************************//\n// Helper function for str-to-num fn.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _convert-units($number, $unit) {\n  $strings: \"px\", \"cm\", \"mm\", \"%\", \"ch\", \"pica\", \"in\", \"em\", \"rem\", \"pt\", \"pc\", \"ex\", \"vw\", \"vh\", \"vmin\", \"vmax\", \"deg\", \"rad\", \"grad\", \"turn\";\n  $units:   1px, 1cm, 1mm, 1%, 1ch, 1pica, 1in, 1em, 1rem, 1pt, 1pc, 1ex, 1vw, 1vh, 1vmin, 1vmax, 1deg, 1rad, 1grad, 1turn;\n  $index: index($strings, $unit);\n\n  @if not $index {\n    @warn \"Unknown unit `#{$unit}`.\";\n    @return false;\n  }\n\n  @if type-of($number) != \"number\" {\n    @warn \"`#{$number} is not a number`\";\n    @return false;\n  }\n\n  @return $number * nth($units, $index);\n}\n",
		"@charset \"UTF-8\";\n\n/// Directional-property mixins are shorthands for writing properties like the following\n///\n/// @ignore You can also use `false` instead of `null`.\n///\n/// @param {List} $vals\n///   List of directional values\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-style(dotted null);\n///     @include margin(null 0 10px);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-style: dotted;\n///     border-top-style: dotted;\n///     margin-bottom: 10px;\n///     margin-left: 0;\n///     margin-right: 0;\n///   }\n///\n/// @require {function} contains-falsy\n///\n/// @return {List}\n\n@function collapse-directionals($vals) {\n  $output: null;\n\n  $a: nth($vals, 1);\n  $b: if(length($vals) < 2, $a, nth($vals, 2));\n  $c: if(length($vals) < 3, $a, nth($vals, 3));\n  $d: if(length($vals) < 2, $a, nth($vals, if(length($vals) < 4, 2, 4)));\n\n  @if $a == 0 { $a: 0; }\n  @if $b == 0 { $b: 0; }\n  @if $c == 0 { $c: 0; }\n  @if $d == 0 { $d: 0; }\n\n  @if $a == $b and $a == $c and $a == $d { $output: $a;          }\n  @else if $a == $c and $b == $d         { $output: $a $b;       }\n  @else if $b == $d                      { $output: $a $b $c;    }\n  @else                                  { $output: $a $b $c $d; }\n\n  @return $output;\n}\n\n/// Output directional properties, for instance `margin`.\n///\n/// @access private\n///\n/// @param {String} $pre\n///   Prefix to use\n/// @param {String} $suf\n///   Suffix to use\n/// @param {List} $vals\n///   List of values\n///\n/// @require {function} collapse-directionals\n/// @require {function} contains-falsy\n\n@mixin directional-property($pre, $suf, $vals) {\n  // Property Names\n  $top:    $pre + \"-top\"    + if($suf, \"-#{$suf}\", \"\");\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\n  $left:   $pre + \"-left\"   + if($suf, \"-#{$suf}\", \"\");\n  $right:  $pre + \"-right\"  + if($suf, \"-#{$suf}\", \"\");\n  $all:    $pre +             if($suf, \"-#{$suf}\", \"\");\n\n  $vals: collapse-directionals($vals);\n\n  @if contains-falsy($vals) {\n    @if nth($vals, 1) { #{$top}: nth($vals, 1); }\n\n    @if length($vals) == 1 {\n      @if nth($vals, 1) { #{$right}: nth($vals, 1); }\n    } @else {\n      @if nth($vals, 2) { #{$right}: nth($vals, 2); }\n    }\n\n    @if length($vals) == 2 {\n      @if nth($vals, 1) { #{$bottom}: nth($vals, 1); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n    } @else if length($vals) == 3 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n    } @else if length($vals) == 4 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 4) { #{$left}:   nth($vals, 4); }\n    }\n  } @else {\n    #{$all}: $vals;\n  }\n}\n",
		"// Used for creating the source string for fonts using @font-face\n// Reference: http://goo.gl/Ru1bKP\n\n@function font-url-prefixer($asset-pipeline) {\n  @if $asset-pipeline == true {\n    @return font-url;\n  } @else {\n    @return url;\n  }\n}\n\n@function font-source-declaration(\n  $font-family,\n  $file-path,\n  $asset-pipeline,\n  $file-formats,\n  $font-url) {\n\n  $src: ();\n\n  $formats-map: (\n    eot:   \"#{$file-path}.eot?#iefix\" format(\"embedded-opentype\"),\n    woff2: \"#{$file-path}.woff2\" format(\"woff2\"),\n    woff:  \"#{$file-path}.woff\" format(\"woff\"),\n    ttf:   \"#{$file-path}.ttf\" format(\"truetype\"),\n    svg:   \"#{$file-path}.svg##{$font-family}\" format(\"svg\")\n  );\n\n  @each $key, $values in $formats-map {\n    @if contains($file-formats, $key) {\n      $file-path: nth($values, 1);\n      $font-format: nth($values, 2);\n\n      @if $asset-pipeline == true {\n        $src: append($src, font-url($file-path) $font-format, comma);\n      } @else {\n        $src: append($src, url($file-path) $font-format, comma);\n      }\n    }\n  }\n\n  @return $src;\n}\n",
		"@function _gradient-positions-parser($gradient-type, $gradient-positions) {\n  @if $gradient-positions\n  and ($gradient-type == linear)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _linear-positions-parser($gradient-positions);\n  }\n  @else if $gradient-positions\n  and ($gradient-type == radial)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _radial-positions-parser($gradient-positions);\n  }\n  @return $gradient-positions;\n}\n",
		"// Private function for linear-gradient-parser\n@function _linear-angle-parser($image, $first-val, $prefix, $suffix) {\n  $offset: null;\n  $unit-short:  str-slice($first-val, str-length($first-val) - 2, str-length($first-val));\n  $unit-long:   str-slice($first-val, str-length($first-val) - 3, str-length($first-val));\n\n  @if ($unit-long == \"grad\") or\n      ($unit-long == \"turn\") {\n    $offset: if($unit-long == \"grad\", -100grad * 3, -0.75turn);\n  }\n\n  @else if ($unit-short == \"deg\") or\n           ($unit-short == \"rad\") {\n    $offset: if($unit-short == \"deg\", -90 * 3, 1.6rad);\n  }\n\n  @if $offset {\n    $num: _str-to-num($first-val);\n\n    @return (\n      webkit-image: -webkit- + $prefix + ($offset - $num) + $suffix,\n      spec-image: $image\n    );\n  }\n}\n",
		"@function _linear-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 0, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $has-multiple-vals: str-index($first-val, \" \");\n  $has-single-position: unquote(_position-flipper($first-val) + \"\");\n  $has-angle: is-number(str-slice($first-val, 0, 0));\n\n  @if $has-multiple-vals {\n    $gradients: _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals);\n  }\n\n  @else if $has-single-position != \"\" {\n    $pos: unquote($has-single-position + \"\");\n\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n\n  @else if $has-angle {\n    // Rotate degree for webkit\n    $gradients: _linear-angle-parser($image, $first-val, $prefix, $suffix);\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    );\n  }\n\n  @return $gradients;\n}\n",
		"@function _linear-positions-parser($pos) {\n  $type: type-of(nth($pos, 1));\n  $spec: null;\n  $degree: null;\n  $side: null;\n  $corner: null;\n  $length: length($pos);\n  // Parse Side and corner positions\n  @if ($length > 1) {\n    @if nth($pos, 1) == \"to\" { // Newer syntax\n      $side: nth($pos, 2);\n\n      @if $length == 2 { // eg. to top\n        // Swap for backwards compatability\n        $degree: _position-flipper(nth($pos, 2));\n      }\n      @else if $length == 3 { // eg. to top left\n        $corner: nth($pos, 3);\n      }\n    }\n    @else if $length == 2 { // Older syntax (\"top left\")\n      $side: _position-flipper(nth($pos, 1));\n      $corner: _position-flipper(nth($pos, 2));\n    }\n\n    @if (\"#{$side} #{$corner}\" == \"left top\") or (\"#{$side} #{$corner}\" == \"top left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right top\") or (\"#{$side} #{$corner}\" == \"top right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right bottom\") or (\"#{$side} #{$corner}\" == \"bottom right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"left bottom\") or (\"#{$side} #{$corner}\" == \"bottom left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    $spec: to $side $corner;\n  }\n  @else if $length == 1 {\n    // Swap for backwards compatability\n    @if $type == string {\n      $degree: $pos;\n      $spec: to _position-flipper($pos);\n    }\n    @else {\n      $degree: -270 - $pos; //rotate the gradient opposite from spec\n      $spec: $pos;\n    }\n  }\n  $degree: unquote($degree + \",\");\n  $spec:   unquote($spec + \",\");\n  @return $degree $spec;\n}\n\n@function _position-flipper($pos) {\n  @return if($pos == left, right, null)\n         if($pos == right, left, null)\n         if($pos == top, bottom, null)\n         if($pos == bottom, top, null);\n}\n",
		"// Private function for linear-gradient-parser\n@function _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals) {\n  $val-1: str-slice($first-val, 0, $has-multiple-vals - 1 );\n  $val-2: str-slice($first-val, $has-multiple-vals + 1, str-length($first-val));\n  $val-3: null;\n  $has-val-3: str-index($val-2, \" \");\n\n  @if $has-val-3 {\n    $val-3: str-slice($val-2, $has-val-3 + 1, str-length($val-2));\n    $val-2: str-slice($val-2, 0, $has-val-3 - 1);\n  }\n\n  $pos: _position-flipper($val-1) _position-flipper($val-2) _position-flipper($val-3);\n  $pos: unquote($pos + \"\");\n\n  // Use old spec for webkit\n  @if $val-1 == \"to\" {\n    @return (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  // Bring the code up to spec\n  @else {\n    @return (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n}\n",
		"@function _radial-arg-parser($g1, $g2, $pos, $shape-size) {\n  @each $value in $g1, $g2 {\n    $first-val: nth($value, 1);\n    $pos-type:  type-of($first-val);\n    $spec-at-index: null;\n\n    // Determine if spec was passed to mixin\n    @if type-of($value) == list {\n      $spec-at-index: if(index($value, at), index($value, at), false);\n    }\n    @if $spec-at-index {\n      @if $spec-at-index > 1 {\n        @for $i from 1 through ($spec-at-index - 1) {\n          $shape-size: $shape-size nth($value, $i);\n        }\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      @else if $spec-at-index == 1 {\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      $g1: null;\n    }\n\n    // If not spec calculate correct values\n    @else {\n      @if ($pos-type != color) or ($first-val != \"transparent\") {\n        @if ($pos-type == number)\n        or ($first-val == \"center\")\n        or ($first-val == \"top\")\n        or ($first-val == \"right\")\n        or ($first-val == \"bottom\")\n        or ($first-val == \"left\") {\n\n          $pos: $value;\n\n          @if $pos == $g1 {\n            $g1: null;\n          }\n        }\n\n        @else if\n           ($first-val == \"ellipse\")\n        or ($first-val == \"circle\")\n        or ($first-val == \"closest-side\")\n        or ($first-val == \"closest-corner\")\n        or ($first-val == \"farthest-side\")\n        or ($first-val == \"farthest-corner\")\n        or ($first-val == \"contain\")\n        or ($first-val == \"cover\") {\n\n          $shape-size: $value;\n\n          @if $value == $g1 {\n            $g1: null;\n          }\n\n          @else if $value == $g2 {\n            $g2: null;\n          }\n        }\n      }\n    }\n  }\n  @return $g1, $g2, $pos, $shape-size;\n}\n",
		"@function _radial-positions-parser($gradient-pos) {\n  $shape-size: nth($gradient-pos, 1);\n  $pos:        nth($gradient-pos, 2);\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  $pre-spec: unquote(if($pos, \"#{$pos}, \", null))\n             unquote(if($shape-size, \"#{$shape-size},\", null));\n  $pos-spec: if($pos, \"at #{$pos}\", null);\n\n  $spec: \"#{$shape-size-spec} #{$pos-spec}\";\n\n  // Add comma\n  @if ($spec != \"  \") {\n    $spec: \"#{$spec},\";\n  }\n\n  @return $pre-spec $spec;\n}\n",
		"@function _radial-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 0, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $is-spec-syntax: str-index($first-val, \"at\");\n\n  @if $is-spec-syntax and $is-spec-syntax > 1 {\n    $keyword: str-slice($first-val, 1, $is-spec-syntax - 2);\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n    $pos: append($pos, $keyword, comma);\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  @else if $is-spec-syntax == 1 {\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  @else if str-index($image, \"cover\") or str-index($image, \"contain\") {\n    @warn \"Radial-gradient needs to be updated to conform to latest spec.\";\n\n    $gradients: (\n      webkit-image: null,\n      spec-image: $image\n    );\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    );\n  }\n\n  @return $gradients;\n}\n",
		"// User for linear and radial gradients within background-image or border-image properties\n\n@function _render-gradients($gradient-positions, $gradients, $gradient-type, $vendor: false) {\n  $pre-spec: null;\n  $spec: null;\n  $vendor-gradients: null;\n  @if $gradient-type == linear {\n    @if $gradient-positions {\n      $pre-spec: nth($gradient-positions, 1);\n      $spec:     nth($gradient-positions, 2);\n    }\n  }\n  @else if $gradient-type == radial {\n    $pre-spec: nth($gradient-positions, 1);\n    $spec:     nth($gradient-positions, 2);\n  }\n\n  @if $vendor {\n    $vendor-gradients: -#{$vendor}-#{$gradient-type}-gradient(#{$pre-spec} $gradients);\n  }\n  @else if $vendor == false {\n    $vendor-gradients: \"#{$gradient-type}-gradient(#{$spec} #{$gradients})\";\n    $vendor-gradients: unquote($vendor-gradients);\n  }\n  @return $vendor-gradients;\n}\n",
		"@function _shape-size-stripper($shape-size) {\n  $shape-size-spec: null;\n  @each $value in $shape-size {\n    @if ($value == \"cover\") or ($value == \"contain\") {\n      $value: null;\n    }\n    $shape-size-spec: \"#{$shape-size-spec} #{$value}\";\n  }\n  @return $shape-size-spec;\n}\n",
		"//************************************************************************//\n// Helper function for linear/radial-gradient-parsers.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _str-to-num($string) {\n  // Matrices\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == \"-\" {\n      $minus: true;\n    }\n\n    @else if $character == \".\" {\n      $divider: 1;\n    }\n\n    @else {\n      @if not $index {\n        $result: if($minus, $result * -1, $result);\n        @return _convert-units($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      }\n\n      @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n  @return if($minus, $result * -1, $result);\n}\n",
		"// http://www.w3.org/TR/css3-animations/#the-animation-name-property-\n// Each of these mixins support comma separated lists of values, which allows different transitions for individual properties to be described in a single style rule. Each value in the list corresponds to the value at that same position in the other properties.\n\n@mixin animation($animations...) {\n  @include prefixer(animation, $animations, webkit moz spec);\n}\n\n@mixin animation-name($names...) {\n  @include prefixer(animation-name, $names, webkit moz spec);\n}\n\n@mixin animation-duration($times...) {\n  @include prefixer(animation-duration, $times, webkit moz spec);\n}\n\n@mixin animation-timing-function($motions...) {\n  // ease | linear | ease-in | ease-out | ease-in-out\n  @include prefixer(animation-timing-function, $motions, webkit moz spec);\n}\n\n@mixin animation-iteration-count($values...) {\n  // infinite | <number>\n  @include prefixer(animation-iteration-count, $values, webkit moz spec);\n}\n\n@mixin animation-direction($directions...) {\n  // normal | alternate\n  @include prefixer(animation-direction, $directions, webkit moz spec);\n}\n\n@mixin animation-play-state($states...) {\n  // running | paused\n  @include prefixer(animation-play-state, $states, webkit moz spec);\n}\n\n@mixin animation-delay($times...) {\n  @include prefixer(animation-delay, $times, webkit moz spec);\n}\n\n@mixin animation-fill-mode($modes...) {\n  // none | forwards | backwards | both\n  @include prefixer(animation-fill-mode, $modes, webkit moz spec);\n}\n",
		"@mixin appearance($value) {\n  @include prefixer(appearance, $value, webkit moz ms o spec);\n}\n",
		"@mixin backface-visibility($visibility) {\n  @include prefixer(backface-visibility, $visibility, webkit spec);\n}\n",
		"//************************************************************************//\n// Background property for adding multiple backgrounds using shorthand\n// notation.\n//************************************************************************//\n\n@mixin background($backgrounds...) {\n  $webkit-backgrounds: ();\n  $spec-backgrounds: ();\n\n  @each $background in $backgrounds {\n    $webkit-background: ();\n    $spec-background: ();\n    $background-type: type-of($background);\n\n    @if $background-type == string or $background-type == list {\n      $background-str: if($background-type == list, nth($background, 1), $background);\n\n      $url-str:       str-slice($background-str, 0, 3);\n      $gradient-type: str-slice($background-str, 0, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-background: $background;\n        $spec-background:   $background;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-background: $background;\n        $spec-background:   $background;\n      }\n    }\n\n    @else {\n      $webkit-background: $background;\n      $spec-background:   $background;\n    }\n\n    $webkit-backgrounds: append($webkit-backgrounds, $webkit-background, comma);\n    $spec-backgrounds:   append($spec-backgrounds,   $spec-background,   comma);\n  }\n\n  background: $webkit-backgrounds;\n  background: $spec-backgrounds;\n}\n",
		"//************************************************************************//\n// Background-image property for adding multiple background images with\n// gradients, or for stringing multiple gradients together.\n//************************************************************************//\n\n@mixin background-image($images...) {\n  $webkit-images: ();\n  $spec-images: ();\n\n  @each $image in $images {\n    $webkit-image: ();\n    $spec-image: ();\n\n    @if (type-of($image) == string) {\n      $url-str:       str-slice($image, 0, 3);\n      $gradient-type: str-slice($image, 0, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-image: $image;\n        $spec-image:   $image;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser($image);\n        $webkit-image:  map-get($gradients, webkit-image);\n        $spec-image:    map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser($image);\n        $webkit-image: map-get($gradients, webkit-image);\n        $spec-image:   map-get($gradients, spec-image);\n      }\n    }\n\n    $webkit-images: append($webkit-images, $webkit-image, comma);\n    $spec-images:   append($spec-images,   $spec-image,   comma);\n  }\n\n  background-image: $webkit-images;\n  background-image: $spec-images;\n}\n",
		"@mixin border-image($borders...) {\n  $webkit-borders: ();\n  $spec-borders: ();\n\n  @each $border in $borders {\n    $webkit-border: ();\n    $spec-border: ();\n    $border-type: type-of($border);\n\n    @if $border-type == string or list {\n      $border-str: if($border-type == list, nth($border, 1), $border);\n\n      $url-str:       str-slice($border-str, 0, 3);\n      $gradient-type: str-slice($border-str, 0, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-border: $border;\n        $spec-border:   $border;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-border: $border;\n        $spec-border:   $border;\n      }\n    }\n\n    @else {\n      $webkit-border: $border;\n      $spec-border:   $border;\n    }\n\n    $webkit-borders: append($webkit-borders, $webkit-border, comma);\n    $spec-borders:   append($spec-borders,   $spec-border,   comma);\n  }\n\n  -webkit-border-image: $webkit-borders;\n          border-image: $spec-borders;\n          border-style: solid;\n}\n\n//Examples:\n// @include border-image(url(\"image.png\"));\n// @include border-image(url(\"image.png\") 20 stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow));\n// @include border-image(linear-gradient(45deg, orange, yellow) stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow) 20 30 40 50 stretch round);\n// @include border-image(radial-gradient(top, cover, orange, yellow, orange));\n",
		"@mixin calc($property, $value) {\n  #{$property}: -webkit-calc(#{$value});\n  #{$property}: calc(#{$value});\n}\n",
		"@mixin columns($arg: auto) {\n  // <column-count> || <column-width>\n  @include prefixer(columns, $arg, webkit moz spec);\n}\n\n@mixin column-count($int: auto) {\n  // auto || integer\n  @include prefixer(column-count, $int, webkit moz spec);\n}\n\n@mixin column-gap($length: normal) {\n  // normal || length\n  @include prefixer(column-gap, $length, webkit moz spec);\n}\n\n@mixin column-fill($arg: auto) {\n  // auto || length\n  @include prefixer(column-fill, $arg, webkit moz spec);\n}\n\n@mixin column-rule($arg) {\n  // <border-width> || <border-style> || <color>\n  @include prefixer(column-rule, $arg, webkit moz spec);\n}\n\n@mixin column-rule-color($color) {\n  @include prefixer(column-rule-color, $color, webkit moz spec);\n}\n\n@mixin column-rule-style($style: none) {\n  // none | hidden | dashed | dotted | double | groove | inset | inset | outset | ridge | solid\n  @include prefixer(column-rule-style, $style, webkit moz spec);\n}\n\n@mixin column-rule-width ($width: none) {\n  @include prefixer(column-rule-width, $width, webkit moz spec);\n}\n\n@mixin column-span($arg: none) {\n  // none || all\n  @include prefixer(column-span, $arg, webkit moz spec);\n}\n\n@mixin column-width($length: auto) {\n  // auto || length\n  @include prefixer(column-width, $length, webkit moz spec);\n}\n",
		"@mixin filter($function: none) {\n  // <filter-function> [<filter-function]* | none\n  @include prefixer(filter, $function, webkit spec);\n}\n",
		"// CSS3 Flexible Box Model and property defaults\n\n// Custom shorthand notation for flexbox\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\n  @include display-box;\n  @include box-orient($orient);\n  @include box-pack($pack);\n  @include box-align($align);\n}\n\n@mixin display-box {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox; // IE 10\n  display: box;\n}\n\n@mixin box-orient($orient: inline-axis) {\n// horizontal|vertical|inline-axis|block-axis|inherit\n  @include prefixer(box-orient, $orient, webkit moz spec);\n}\n\n@mixin box-pack($pack: start) {\n// start|end|center|justify\n  @include prefixer(box-pack, $pack, webkit moz spec);\n  -ms-flex-pack: $pack; // IE 10\n}\n\n@mixin box-align($align: stretch) {\n// start|end|center|baseline|stretch\n  @include prefixer(box-align, $align, webkit moz spec);\n  -ms-flex-align: $align; // IE 10\n}\n\n@mixin box-direction($direction: normal) {\n// normal|reverse|inherit\n  @include prefixer(box-direction, $direction, webkit moz spec);\n  -ms-flex-direction: $direction; // IE 10\n}\n\n@mixin box-lines($lines: single) {\n// single|multiple\n  @include prefixer(box-lines, $lines, webkit moz spec);\n}\n\n@mixin box-ordinal-group($int: 1) {\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n  -ms-flex-order: $int; // IE 10\n}\n\n@mixin box-flex($value: 0) {\n  @include prefixer(box-flex, $value, webkit moz spec);\n  -ms-flex: $value; // IE 10\n}\n\n@mixin box-flex-group($int: 1) {\n  @include prefixer(box-flex-group, $int, webkit moz spec);\n}\n\n// CSS3 Flexible Box Model and property defaults\n// Unified attributes for 2009, 2011, and 2012 flavours.\n\n// 2009 - display (box | inline-box)\n// 2011 - display (flexbox | inline-flexbox)\n// 2012 - display (flex | inline-flex)\n@mixin display($value) {\n// flex | inline-flex\n  @if $value == \"flex\" {\n    // 2009\n    display: -webkit-box;\n    display: -moz-box;\n    display: box;\n\n    // 2012\n    display: -webkit-flex;\n    display: -moz-flex;\n    display: -ms-flexbox; // 2011 (IE 10)\n    display: flex;\n  } @else if $value == \"inline-flex\" {\n    display: -webkit-inline-box;\n    display: -moz-inline-box;\n    display: inline-box;\n\n    display: -webkit-inline-flex;\n    display: -moz-inline-flex;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n  } @else {\n    display: $value;\n  }\n}\n\n// 2009 - box-flex (integer)\n// 2011 - flex (decimal | width decimal)\n// 2012 - flex (integer integer width)\n@mixin flex($value) {\n\n  // Grab flex-grow for older browsers.\n  $flex-grow: nth($value, 1);\n\n  // 2009\n  @include prefixer(box-flex, $flex-grow, webkit moz spec);\n\n  // 2011 (IE 10), 2012\n  @include prefixer(flex, $value, webkit moz ms spec);\n}\n\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\n//      - box-direction (normal | reverse)\n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\n@mixin flex-direction($value: row) {\n\n  // Alt values.\n  $value-2009: $value;\n  $value-2011: $value;\n  $direction: normal;\n\n  @if $value == row {\n    $value-2009: horizontal;\n  } @else if $value == \"row-reverse\" {\n    $value-2009: horizontal;\n    $direction: reverse;\n  } @else if $value == column {\n    $value-2009: vertical;\n  } @else if $value == \"column-reverse\" {\n    $value-2009: vertical;\n    $direction: reverse;\n  }\n\n  // 2009\n  @include prefixer(box-orient, $value-2009, webkit moz spec);\n  @include prefixer(box-direction, $direction, webkit moz spec);\n\n  // 2012\n  @include prefixer(flex-direction, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-direction: $value;\n}\n\n// 2009 - box-lines (single | multiple)\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\n@mixin flex-wrap($value: nowrap) {\n  // Alt values\n  $alt-value: $value;\n  @if $value == nowrap {\n    $alt-value: single;\n  } @else if $value == wrap {\n    $alt-value: multiple;\n  } @else if $value == \"wrap-reverse\" {\n    $alt-value: multiple;\n  }\n\n  @include prefixer(box-lines, $alt-value, webkit moz spec);\n  @include prefixer(flex-wrap, $value, webkit moz ms spec);\n}\n\n// 2009 - TODO: parse values into flex-direction/flex-wrap\n// 2011 - TODO: parse values into flex-direction/flex-wrap\n// 2012 - flex-flow (flex-direction || flex-wrap)\n@mixin flex-flow($value) {\n  @include prefixer(flex-flow, $value, webkit moz spec);\n}\n\n// 2009 - box-ordinal-group (integer)\n// 2011 - flex-order (integer)\n// 2012 - order (integer)\n@mixin order($int: 0) {\n  // 2009\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n\n  // 2012\n  @include prefixer(order, $int, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-order: $int;\n}\n\n// 2012 - flex-grow (number)\n@mixin flex-grow($number: 0) {\n  @include prefixer(flex-grow, $number, webkit moz spec);\n  -ms-flex-positive: $number;\n}\n\n// 2012 - flex-shrink (number)\n@mixin flex-shrink($number: 1) {\n  @include prefixer(flex-shrink, $number, webkit moz spec);\n  -ms-flex-negative: $number;\n}\n\n// 2012 - flex-basis (number)\n@mixin flex-basis($width: auto) {\n  @include prefixer(flex-basis, $width, webkit moz spec);\n  -ms-flex-preferred-size: $width;\n}\n\n// 2009 - box-pack (start | end | center | justify)\n// 2011 - flex-pack (start | end | center | justify)\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\n@mixin justify-content($value: flex-start) {\n\n  // Alt values.\n  $alt-value: $value;\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  } @else if $value == \"space-between\" {\n    $alt-value: justify;\n  } @else if $value == \"space-around\" {\n    $alt-value: distribute;\n  }\n\n  // 2009\n  @include prefixer(box-pack, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(justify-content, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-pack: $alt-value;\n}\n\n// 2009 - box-align (start | end | center | baseline | stretch)\n// 2011 - flex-align (start | end | center | baseline | stretch)\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\n@mixin align-items($value: stretch) {\n\n  $alt-value: $value;\n\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  }\n\n  // 2009\n  @include prefixer(box-align, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(align-items, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-align: $alt-value;\n}\n\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\n@mixin align-self($value: auto) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  }\n\n  // 2012\n  @include prefixer(align-self, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-item-align: $value-2011;\n}\n\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\n@mixin align-content($value: stretch) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  } @else if $value == \"space-between\" {\n    $value-2011: justify;\n  } @else if $value == \"space-around\" {\n    $value-2011: distribute;\n  }\n\n  // 2012\n  @include prefixer(align-content, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-line-pack: $value-2011;\n}\n",
		"@mixin font-face(\n  $font-family,\n  $file-path,\n  $weight: normal,\n  $style: normal,\n  $asset-pipeline: $asset-pipeline,\n  $file-formats: eot woff2 woff ttf svg) {\n\n  $font-url-prefix: font-url-prefixer($asset-pipeline);\n\n  @font-face {\n    font-family: $font-family;\n    font-style: $style;\n    font-weight: $weight;\n\n    src: font-source-declaration(\n      $font-family,\n      $file-path,\n      $asset-pipeline,\n      $file-formats,\n      $font-url-prefix\n    );\n  }\n}\n",
		"@mixin font-feature-settings($settings...) {\n  @if length($settings) == 0 { $settings: none; }\n  @include prefixer(font-feature-settings, $settings, webkit moz ms spec);\n}\n",
		"// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)\n@mixin hidpi($ratio: 1.3) {\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\n  only screen and (min--moz-device-pixel-ratio: $ratio),\n  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),\n  only screen and (min-resolution: round($ratio * 96dpi)),\n  only screen and (min-resolution: $ratio * 1dppx) {\n    @content;\n  }\n}\n",
		"@mixin hyphens($hyphenation: none) {\n  // none | manual | auto\n  @include prefixer(hyphens, $hyphenation, webkit moz ms spec);\n}\n",
		"@mixin image-rendering ($mode:auto) {\n\n  @if ($mode == crisp-edges) {\n    -ms-interpolation-mode: nearest-neighbor; // IE8+\n    image-rendering: -moz-crisp-edges;\n    image-rendering: -o-crisp-edges;\n    image-rendering: -webkit-optimize-contrast;\n    image-rendering: crisp-edges;\n  }\n\n  @else {\n    image-rendering: $mode;\n  }\n}\n",
		"// Adds keyframes blocks for supported prefixes, removing redundant prefixes in the block's content\n@mixin keyframes($name) {\n  $original-prefix-for-webkit:    $prefix-for-webkit;\n  $original-prefix-for-mozilla:   $prefix-for-mozilla;\n  $original-prefix-for-microsoft: $prefix-for-microsoft;\n  $original-prefix-for-opera:     $prefix-for-opera;\n  $original-prefix-for-spec:      $prefix-for-spec;\n\n  @if $original-prefix-for-webkit {\n    @include disable-prefix-for-all();\n    $prefix-for-webkit: true !global;\n    @-webkit-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  @if $original-prefix-for-mozilla {\n    @include disable-prefix-for-all();\n    $prefix-for-mozilla: true !global;\n    @-moz-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  $prefix-for-webkit:    $original-prefix-for-webkit    !global;\n  $prefix-for-mozilla:   $original-prefix-for-mozilla   !global;\n  $prefix-for-microsoft: $original-prefix-for-microsoft !global;\n  $prefix-for-opera:     $original-prefix-for-opera     !global;\n  $prefix-for-spec:      $original-prefix-for-spec      !global;\n\n  @if $original-prefix-for-spec {\n    @keyframes #{$name} {\n      @content;\n    }\n  }\n}\n",
		"@mixin linear-gradient($pos, $g1, $g2: null,\n                       $g3: null, $g4: null,\n                       $g5: null, $g6: null,\n                       $g7: null, $g8: null,\n                       $g9: null, $g10: null,\n                       $fallback: null) {\n  // Detect what type of value exists in $pos\n  $pos-type: type-of(nth($pos, 1));\n  $pos-spec: null;\n  $pos-degree: null;\n\n  // If $pos is missing from mixin, reassign vars and add default position\n  @if ($pos-type == color) or (nth($pos, 1) == \"transparent\")  {\n    $g10: $g9; $g9: $g8; $g8: $g7; $g7: $g6; $g6: $g5;\n    $g5: $g4; $g4: $g3; $g3: $g2; $g2: $g1; $g1: $pos;\n    $pos: null;\n  }\n\n  @if $pos {\n    $positions: _linear-positions-parser($pos);\n    $pos-degree: nth($positions, 1);\n    $pos-spec:   nth($positions, 2);\n  }\n\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\n\n  // Set $g1 as the default fallback color\n  $fallback-color: nth($g1, 1);\n\n  // If $fallback is a color use that color as the fallback color\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  background-color: $fallback-color;\n  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome\n  background-image: unquote(\"linear-gradient(#{$pos-spec}#{$full})\");\n}\n",
		"@mixin perspective($depth: none) {\n  // none | <length>\n  @include prefixer(perspective, $depth, webkit moz spec);\n}\n\n@mixin perspective-origin($value: 50% 50%) {\n  @include prefixer(perspective-origin, $value, webkit moz spec);\n}\n",
		"@mixin placeholder {\n  $placeholders: \":-webkit-input\" \":-moz\" \"-moz\" \"-ms-input\";\n  @each $placeholder in $placeholders {\n    &:#{$placeholder}-placeholder {\n      @content;\n    }\n  }\n}\n",
		"// Requires Sass 3.1+\n@mixin radial-gradient($g1, $g2,\n                       $g3: null, $g4: null,\n                       $g5: null, $g6: null,\n                       $g7: null, $g8: null,\n                       $g9: null, $g10: null,\n                       $pos: null,\n                       $shape-size: null,\n                       $fallback: null) {\n\n  $data: _radial-arg-parser($g1, $g2, $pos, $shape-size);\n  $g1:  nth($data, 1);\n  $g2:  nth($data, 2);\n  $pos: nth($data, 3);\n  $shape-size: nth($data, 4);\n\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\n\n  // Strip deprecated cover/contain for spec\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  // Set $g1 as the default fallback color\n  $first-color: nth($full, 1);\n  $fallback-color: nth($first-color, 1);\n\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  // Add Commas and spaces\n  $shape-size: if($shape-size, \"#{$shape-size}, \", null);\n  $pos:        if($pos, \"#{$pos}, \", null);\n  $pos-spec:   if($pos, \"at #{$pos}\", null);\n  $shape-size-spec: if(($shape-size-spec != \" \") and ($pos == null), \"#{$shape-size-spec}, \", \"#{$shape-size-spec} \");\n\n  background-color:  $fallback-color;\n  background-image: -webkit-radial-gradient(unquote(#{$pos}#{$shape-size}#{$full}));\n  background-image: unquote(\"radial-gradient(#{$shape-size-spec}#{$pos-spec}#{$full})\");\n}\n",
		"@charset \"UTF-8\";\r\n\r\n/// Outputs the spec and prefixed versions of the `::selection` pseudo-element.\r\n///\r\n/// @param {Bool} $current-selector [false]\r\n///   If set to `true`, it takes the current element into consideration.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include selection(true) {\r\n///       background-color: #ffbb52;\r\n///     }\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element::-moz-selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n///\r\n///   .element::selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n\r\n@mixin selection($current-selector: false) {\r\n  @if $current-selector {\r\n    &::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    &::selection {\r\n      @content;\r\n    }\r\n  } @else {\r\n    ::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    ::selection {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n",
		"@mixin text-decoration($value) {\n// <text-decoration-line> || <text-decoration-style> || <text-decoration-color>\n  @include prefixer(text-decoration, $value, moz);\n}\n\n@mixin text-decoration-line($line: none) {\n// none || underline || overline || line-through\n  @include prefixer(text-decoration-line, $line, moz);\n}\n\n@mixin text-decoration-style($style: solid) {\n// solid || double || dotted || dashed || wavy\n  @include prefixer(text-decoration-style, $style, moz webkit);\n}\n\n@mixin text-decoration-color($color: currentColor) {\n// currentColor || <color>\n  @include prefixer(text-decoration-color, $color, moz);\n}\n",
		"@mixin transform($property: none) {\n  // none | <transform-function>\n  @include prefixer(transform, $property, webkit moz ms o spec);\n}\n\n@mixin transform-origin($axes: 50%) {\n  // x-axis - left | center | right  | length | %\n  // y-axis - top  | center | bottom | length | %\n  // z-axis -                          length\n  @include prefixer(transform-origin, $axes, webkit moz ms o spec);\n}\n\n@mixin transform-style($style: flat) {\n  @include prefixer(transform-style, $style, webkit moz ms o spec);\n}\n",
		"// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.\n// Example: @include transition (all 2s ease-in-out);\n//          @include transition (opacity 1s ease-in 2s, width 2s ease-out);\n//          @include transition-property (transform, opacity);\n\n@mixin transition($properties...) {\n  // Fix for vendor-prefix transform property\n  $needs-prefixes: false;\n  $webkit: ();\n  $moz: ();\n  $spec: ();\n\n  // Create lists for vendor-prefixed transform\n  @each $list in $properties {\n    @if nth($list, 1) == \"transform\" {\n      $needs-prefixes: true;\n      $list1: -webkit-transform;\n      $list2: -moz-transform;\n      $list3: ();\n\n      @each $var in $list {\n        $list3: join($list3, $var);\n\n        @if $var != \"transform\" {\n          $list1: join($list1, $var);\n          $list2: join($list2, $var);\n        }\n      }\n\n      $webkit: append($webkit, $list1);\n      $moz:    append($moz,    $list2);\n      $spec:   append($spec,   $list3);\n    } @else {\n      $webkit: append($webkit, $list, comma);\n      $moz:    append($moz,    $list, comma);\n      $spec:   append($spec,   $list, comma);\n    }\n  }\n\n  @if $needs-prefixes {\n    -webkit-transition: $webkit;\n       -moz-transition: $moz;\n            transition: $spec;\n  } @else {\n    @if length($properties) >= 1 {\n      @include prefixer(transition, $properties, webkit moz spec);\n    } @else {\n      $properties: all 0.15s ease-out 0s;\n      @include prefixer(transition, $properties, webkit moz spec);\n    }\n  }\n}\n\n@mixin transition-property($properties...) {\n  -webkit-transition-property: transition-property-names($properties, \"webkit\");\n     -moz-transition-property: transition-property-names($properties, \"moz\");\n          transition-property: transition-property-names($properties, false);\n}\n\n@mixin transition-duration($times...) {\n  @include prefixer(transition-duration, $times, webkit moz spec);\n}\n\n@mixin transition-timing-function($motions...) {\n  // ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()\n  @include prefixer(transition-timing-function, $motions, webkit moz spec);\n}\n\n@mixin transition-delay($times...) {\n  @include prefixer(transition-delay, $times, webkit moz spec);\n}\n",
		"@mixin user-select($value: none) {\n  @include prefixer(user-select, $value, webkit moz ms spec);\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-color` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-color(#a60b55 #76cd9c null #e8ae1a);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-left-color: #e8ae1a;\n///     border-right-color: #76cd9c;\n///     border-top-color: #a60b55;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-color`\n\n@mixin border-color($vals...) {\n  @include directional-property(border, color, $vals...);\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-radius` on both corners on the side of a box.\n///\n/// @param {Number} $radii\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element-one {\n///     @include border-top-radius(5px);\n///   }\n///\n///   .element-two {\n///     @include border-left-radius(3px);\n///   }\n///\n/// @example css - CSS Output\n///   .element-one {\n///     border-top-left-radius: 5px;\n///     border-top-right-radius: 5px;\n///   }\n///\n///   .element-two {\n///     border-bottom-left-radius: 3px;\n///     border-top-left-radius: 3px;\n///   }\n///\n/// @output `border-radius`\n\n@mixin border-top-radius($radii) {\n  border-top-left-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n@mixin border-right-radius($radii) {\n  border-bottom-right-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n@mixin border-bottom-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-bottom-right-radius: $radii;\n}\n\n@mixin border-left-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-top-left-radius: $radii;\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-style` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-style(dashed null solid);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-style: solid;\n///     border-top-style: dashed;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-style`\n\n@mixin border-style($vals...) {\n  @include directional-property(border, style, $vals...);\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-width` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-width(1em null 20px);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-width: 20px;\n///     border-top-width: 1em;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-width`\n\n@mixin border-width($vals...) {\n  @include directional-property(border, width, $vals...);\n}\n",
		"@charset \"UTF-8\";\n\n/// Generates variables for all buttons. Please note that you must use interpolation on the variable: `#{$all-buttons}`.\n///\n/// @example scss - Usage\n///   #{$all-buttons} {\n///     background-color: #f00;\n///   }\n///\n///   #{$all-buttons-focus},\n///   #{$all-buttons-hover} {\n///     background-color: #0f0;\n///   }\n///\n///   #{$all-buttons-active} {\n///     background-color: #00f;\n///   }\n///\n/// @example css - CSS Output\n///   button,\n///   input[type=\"button\"],\n///   input[type=\"reset\"],\n///   input[type=\"submit\"] {\n///     background-color: #f00;\n///   }\n///\n///   button:focus,\n///   input[type=\"button\"]:focus,\n///   input[type=\"reset\"]:focus,\n///   input[type=\"submit\"]:focus,\n///   button:hover,\n///   input[type=\"button\"]:hover,\n///   input[type=\"reset\"]:hover,\n///   input[type=\"submit\"]:hover {\n///     background-color: #0f0;\n///   }\n///\n///   button:active,\n///   input[type=\"button\"]:active,\n///   input[type=\"reset\"]:active,\n///   input[type=\"submit\"]:active {\n///     background-color: #00f;\n///   }\n///\n/// @require assign-inputs\n///\n/// @type List\n///\n/// @todo Remove double assigned variables (Lines 59–62) in v5.0.0\n\n$buttons-list: 'button',\n               'input[type=\"button\"]',\n               'input[type=\"reset\"]',\n               'input[type=\"submit\"]';\n\n$all-buttons:        assign-inputs($buttons-list);\n$all-buttons-active: assign-inputs($buttons-list, active);\n$all-buttons-focus:  assign-inputs($buttons-list, focus);\n$all-buttons-hover:  assign-inputs($buttons-list, hover);\n\n$all-button-inputs:        $all-buttons;\n$all-button-inputs-active: $all-buttons-active;\n$all-button-inputs-focus:  $all-buttons-focus;\n$all-button-inputs-hover:  $all-buttons-hover;\n",
		"@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\n///\n/// @example scss - Usage\n///   .element {\n///     @include clearfix;\n///   }\n///\n/// @example css - CSS Output\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: table;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Truncates text and adds an ellipsis to represent overflow.\n///\n/// @param {Number} $width [100%]\n///   Max-width for the string to respect before being truncated\n///\n/// @example scss - Usage\n///   .element {\n///     @include ellipsis;\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     display: inline-block;\n///     max-width: 100%;\n///     overflow: hidden;\n///     text-overflow: ellipsis;\n///     white-space: nowrap;\n///     word-wrap: normal;\n///   }\n\n@mixin ellipsis($width: 100%) {\n  display: inline-block;\n  max-width: $width;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-wrap: normal;\n}\n",
		"@charset \"UTF-8\";\n\n/// Georgia font stack.\n///\n/// @type List\n\n$georgia: \"Georgia\", \"Cambria\", \"Times New Roman\", \"Times\", serif;\n\n/// Helvetica font stack.\n///\n/// @type List\n\n$helvetica: \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\n\n/// Lucida Grande font stack.\n///\n/// @type List\n\n$lucida-grande: \"Lucida Grande\", \"Tahoma\", \"Verdana\", \"Arial\", sans-serif;\n\n/// Monospace font stack.\n///\n/// @type List\n\n$monospace: \"Bitstream Vera Sans Mono\", \"Consolas\", \"Courier\", monospace;\n\n/// Verdana font stack.\n///\n/// @type List\n\n$verdana: \"Verdana\", \"Geneva\", sans-serif;\n",
		"/// Hides the text in an element, commonly used to show an image. Some elements will need block-level styles applied.\n///\n/// @link http://zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement\n///\n/// @example scss - Usage\n///   .element {\n///     @include hide-text;\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     overflow: hidden;\n///     text-indent: 101%;\n///     white-space: nowrap;\n///   }\n///\n/// @todo Remove height argument in v5.0.0\n\n@mixin hide-text($height: null) {\n  overflow: hidden;\n  text-indent: 101%;\n  white-space: nowrap;\n\n  @if $height {\n    @warn \"The `hide-text` mixin has changed and no longer requires a height. The height argument will no longer be accepted in v5.0.0\";\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `margin` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include margin(null 10px 3em 20vh);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     margin-bottom: 3em;\n///     margin-left: 20vh;\n///     margin-right: 10px;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `margin`\n\n@mixin margin($vals...) {\n  @include directional-property(margin, false, $vals...);\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `padding` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include padding(12vh null 10px 5%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     padding-bottom: 10px;\n///     padding-left: 5%;\n///     padding-top: 12vh;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `padding`\n\n@mixin padding($vals...) {\n  @include directional-property(padding, false, $vals...);\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a quick method for setting an element’s position. Use a `null` value to “skip” a side.\n///\n/// @param {Position} $position [relative]\n///   A CSS position value\n///\n/// @param {Arglist} $coordinates [null null null null]\n///   List of values that correspond to the 4-value syntax for the edges of a box\n///\n/// @example scss - Usage\n///   .element {\n///     @include position(absolute, 0 null null 10em);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     left: 10em;\n///     position: absolute;\n///     top: 0;\n///   }\n///\n/// @require {function} is-length\n/// @require {function} unpack\n\n@mixin position($position: relative, $coordinates: null null null null) {\n  @if type-of($position) == list {\n    $coordinates: $position;\n    $position: relative;\n  }\n\n  $coordinates: unpack($coordinates);\n\n  $offsets: (\n    top:    nth($coordinates, 1),\n    right:  nth($coordinates, 2),\n    bottom: nth($coordinates, 3),\n    left:   nth($coordinates, 4)\n  );\n\n  position: $position;\n\n  @each $offset, $value in $offsets {\n    @if is-length($value) {\n      #{$offset}: $value;\n    }\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// A mixin for generating vendor prefixes on non-standardized properties.\n///\n/// @param {String} $property\n///   Property to prefix\n///\n/// @param {*} $value\n///   Value to use\n///\n/// @param {List} $prefixes\n///   Prefixes to define\n///\n/// @example scss - Usage\n///   .element {\n///     @include prefixer(border-radius, 10px, webkit ms spec);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     -webkit-border-radius: 10px;\n///     -moz-border-radius: 10px;\n///     border-radius: 10px;\n///   }\n///\n/// @require {variable} $prefix-for-webkit\n/// @require {variable} $prefix-for-mozilla\n/// @require {variable} $prefix-for-microsoft\n/// @require {variable} $prefix-for-opera\n/// @require {variable} $prefix-for-spec\n\n@mixin prefixer($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    } @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    } @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    } @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    } @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    } @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n",
		"@mixin retina-image($filename, $background-size, $extension: png, $retina-filename: null, $retina-suffix: _2x, $asset-pipeline: $asset-pipeline) {\n  @if $asset-pipeline {\n    background-image: image-url(\"#{$filename}.#{$extension}\");\n  } @else {\n    background-image:       url(\"#{$filename}.#{$extension}\");\n  }\n\n  @include hidpi {\n    @if $asset-pipeline {\n      @if $retina-filename {\n        background-image: image-url(\"#{$retina-filename}.#{$extension}\");\n      } @else {\n        background-image: image-url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    } @else {\n      @if $retina-filename {\n        background-image: url(\"#{$retina-filename}.#{$extension}\");\n      } @else {\n        background-image: url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    }\n\n    background-size: $background-size;\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Sets the `width` and `height` of the element.\n///\n/// @param {List} $size\n///   A list of at most 2 size values.\n///\n///   If there is only a single value in `$size` it is used for both width and height. All units are supported.\n///\n/// @example scss - Usage\n///   .first-element {\n///     @include size(2em);\n///   }\n///\n///   .second-element {\n///     @include size(auto 10em);\n///   }\n///\n/// @example css - CSS Output\n///   .first-element {\n///     width: 2em;\n///     height: 2em;\n///   }\n///\n///   .second-element {\n///     width: auto;\n///     height: 10em;\n///   }\n///\n/// @todo Refactor in 5.0.0 to use a comma-separated argument\n\n@mixin size($value) {\n  $width: nth($value, 1);\n  $height: $width;\n\n  @if length($value) > 1 {\n    $height: nth($value, 2);\n  }\n\n  @if is-size($height) {\n    height: $height;\n  } @else {\n    @warn \"`#{$height}` is not a valid length for the `$height` parameter in the `size` mixin.\";\n  }\n\n  @if is-size($width) {\n    width: $width;\n  } @else {\n    @warn \"`#{$width}` is not a valid length for the `$width` parameter in the `size` mixin.\";\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Generates variables for all text-based inputs. Please note that you must use interpolation on the variable: `#{$all-text-inputs}`.\n///\n/// @example scss - Usage\n///   #{$all-text-inputs} {\n///     border: 1px solid #f00;\n///   }\n///\n///   #{$all-text-inputs-focus},\n///   #{$all-text-inputs-hover} {\n///     border: 1px solid #0f0;\n///   }\n///\n///   #{$all-text-inputs-active} {\n///     border: 1px solid #00f;\n///   }\n///\n/// @example css - CSS Output\n///   input[type=\"color\"],\n///   input[type=\"date\"],\n///   input[type=\"datetime\"],\n///   input[type=\"datetime-local\"],\n///   input[type=\"email\"],\n///   input[type=\"month\"],\n///   input[type=\"number\"],\n///   input[type=\"password\"],\n///   input[type=\"search\"],\n///   input[type=\"tel\"],\n///   input[type=\"text\"],\n///   input[type=\"time\"],\n///   input[type=\"url\"],\n///   input[type=\"week\"],\n///   textarea {\n///     border: 1px solid #f00;\n///   }\n///\n///   input[type=\"color\"]:focus,\n///   input[type=\"date\"]:focus,\n///   input[type=\"datetime\"]:focus,\n///   input[type=\"datetime-local\"]:focus,\n///   input[type=\"email\"]:focus,\n///   input[type=\"month\"]:focus,\n///   input[type=\"number\"]:focus,\n///   input[type=\"password\"]:focus,\n///   input[type=\"search\"]:focus,\n///   input[type=\"tel\"]:focus,\n///   input[type=\"text\"]:focus,\n///   input[type=\"time\"]:focus,\n///   input[type=\"url\"]:focus,\n///   input[type=\"week\"]:focus,\n///   textarea:focus,\n///   input[type=\"color\"]:hover,\n///   input[type=\"date\"]:hover,\n///   input[type=\"datetime\"]:hover,\n///   input[type=\"datetime-local\"]:hover,\n///   input[type=\"email\"]:hover,\n///   input[type=\"month\"]:hover,\n///   input[type=\"number\"]:hover,\n///   input[type=\"password\"]:hover,\n///   input[type=\"search\"]:hover,\n///   input[type=\"tel\"]:hover,\n///   input[type=\"text\"]:hover,\n///   input[type=\"time\"]:hover,\n///   input[type=\"url\"]:hover,\n///   input[type=\"week\"]:hover,\n///   textarea:hover {\n///     border: 1px solid #0f0;\n///   }\n///\n///   input[type=\"color\"]:active,\n///   input[type=\"date\"]:active,\n///   input[type=\"datetime\"]:active,\n///   input[type=\"datetime-local\"]:active,\n///   input[type=\"email\"]:active,\n///   input[type=\"month\"]:active,\n///   input[type=\"number\"]:active,\n///   input[type=\"password\"]:active,\n///   input[type=\"search\"]:active,\n///   input[type=\"tel\"]:active,\n///   input[type=\"text\"]:active,\n///   input[type=\"time\"]:active,\n///   input[type=\"url\"]:active,\n///   input[type=\"week\"]:active,\n///   textarea:active {\n///     border: 1px solid #00f;\n///   }\n///\n/// @require assign-inputs\n///\n/// @type List\n\n$text-inputs-list: 'input[type=\"color\"]',\n                   'input[type=\"date\"]',\n                   'input[type=\"datetime\"]',\n                   'input[type=\"datetime-local\"]',\n                   'input[type=\"email\"]',\n                   'input[type=\"month\"]',\n                   'input[type=\"number\"]',\n                   'input[type=\"password\"]',\n                   'input[type=\"search\"]',\n                   'input[type=\"tel\"]',\n                   'input[type=\"text\"]',\n                   'input[type=\"time\"]',\n                   'input[type=\"url\"]',\n                   'input[type=\"week\"]',\n                   'textarea';\n\n$all-text-inputs:        assign-inputs($text-inputs-list);\n$all-text-inputs-active: assign-inputs($text-inputs-list, active);\n$all-text-inputs-focus:  assign-inputs($text-inputs-list, focus);\n$all-text-inputs-hover:  assign-inputs($text-inputs-list, hover);\n",
		"@charset \"UTF-8\";\n\n/// CSS cubic-bezier timing functions. Timing functions courtesy of jquery.easie (github.com/jaukia/easie)\n///\n/// Timing functions are the same as demoed here: http://jqueryui.com/resources/demos/effect/easing.html\n///\n/// @type cubic-bezier\n\n$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);\n$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);\n$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);\n$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);\n$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);\n$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);\n$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);\n$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);\n\n$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);\n$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);\n$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);\n$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);\n$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);\n$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);\n$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);\n$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);\n\n$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);\n$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);\n$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);\n$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);\n$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);\n$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);\n$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);\n$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);\n",
		"@mixin triangle($size, $color, $direction) {\n  $width: nth($size, 1);\n  $height: nth($size, length($size));\n  $foreground-color: nth($color, 1);\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\n  height: 0;\n  width: 0;\n\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\n    $width: $width / 2;\n    $height: if(length($size) > 1, $height, $height/2);\n\n    @if $direction == up {\n      border-bottom: $height solid $foreground-color;\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n    } @else if $direction == right {\n      border-bottom: $width solid $background-color;\n      border-left: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    } @else if $direction == down {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-top: $height solid $foreground-color;\n    } @else if $direction == left {\n      border-bottom: $width solid $background-color;\n      border-right: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    }\n  } @else if ($direction == up-right) or ($direction == up-left) {\n    border-top: $height solid $foreground-color;\n\n    @if $direction == up-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == up-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == down-right) or ($direction == down-left) {\n    border-bottom: $height solid $foreground-color;\n\n    @if $direction == down-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == down-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == inset-up) {\n    border-color: $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-down) {\n    border-color: $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-right) {\n    border-color: $background-color $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $width $height;\n  } @else if ($direction == inset-left) {\n    border-color: $background-color $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $width $height;\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides an easy way to change the `word-wrap` property.\n///\n/// @param {String} $wrap [break-word]\n///   Value for the `word-break` property.\n///\n/// @example scss - Usage\n///   .wrapper {\n///     @include word-wrap(break-word);\n///   }\n///\n/// @example css - CSS Output\n///   .wrapper {\n///     overflow-wrap: break-word;\n///     word-break: break-all;\n///     word-wrap: break-word;\n///   }\n\n@mixin word-wrap($wrap: break-word) {\n  overflow-wrap: $wrap;\n  word-wrap: $wrap;\n\n  @if $wrap == break-word {\n    word-break: break-all;\n  } @else {\n    word-break: $wrap;\n  }\n}\n",
		"// The following features have been deprecated and will be removed in the next MAJOR version release\n\n@mixin inline-block {\n  display: inline-block;\n\n  @warn \"The inline-block mixin is deprecated and will be removed in the next major version release\";\n}\n\n@mixin button ($style: simple, $base-color: #4294f0, $text-size: inherit, $padding: 7px 18px) {\n\n  @if type-of($style) == string and type-of($base-color) == color {\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == string and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: #4294f0;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == color {\n    $base-color: $style;\n    $style: simple;\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: $style;\n    $style: simple;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == number {\n    $padding: $base-color;\n    $text-size: $style;\n    $base-color: #4294f0;\n    $style: simple;\n\n    @if $padding == #4294f0 {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n\n  @warn \"The button mixin is deprecated and will be removed in the next major version release\";\n}\n\n// Selector Style Button\n@mixin buttonstyle($type, $b-color, $t-size, $pad) {\n  // Grayscale button\n  @if $type == simple and $b-color == grayscale($b-color) {\n    @include simple($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == shiny and $b-color == grayscale($b-color) {\n    @include shiny($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == pill and $b-color == grayscale($b-color) {\n    @include pill($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == flat and $b-color == grayscale($b-color) {\n    @include flat($b-color, true, $t-size, $pad);\n  }\n\n  // Colored button\n  @if $type == simple {\n    @include simple($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == shiny {\n    @include shiny($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == pill {\n    @include pill($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == flat {\n    @include flat($b-color, false, $t-size, $pad);\n  }\n}\n\n// Simple Button\n@mixin simple($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $saturation:  9%,  $lightness: -14%);\n  $inset-shadow:  adjust-color($base-color, $saturation: -8%,  $lightness:  15%);\n  $stop-gradient: adjust-color($base-color, $saturation:  9%,  $lightness: -11%);\n  $text-shadow:   adjust-color($base-color, $saturation:  15%, $lightness: -18%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border;\n  border-radius: 3px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-decoration: none;\n  text-shadow: 0 1px 0 $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n    $inset-shadow-hover:  adjust-color($base-color, $saturation: -7%, $lightness:  5%);\n    $stop-gradient-hover: adjust-color($base-color, $saturation:  8%, $lightness: -14%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n    }\n\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $border-active:       adjust-color($base-color, $saturation: 9%, $lightness: -14%);\n    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);\n\n    @if $grayscale == true {\n      $border-active:       grayscale($border-active);\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    border: 1px solid $border-active;\n    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;\n  }\n}\n\n// Shiny Button\n@mixin shiny($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $red: -117, $green: -111, $blue: -81);\n  $border-bottom: adjust-color($base-color, $red: -126, $green: -127, $blue: -122);\n  $fourth-stop:   adjust-color($base-color, $red: -79,  $green: -70,  $blue: -46);\n  $inset-shadow:  adjust-color($base-color, $red:  37,  $green:  29,  $blue:  12);\n  $second-stop:   adjust-color($base-color, $red: -56,  $green: -50,  $blue: -33);\n  $text-shadow:   adjust-color($base-color, $red: -140, $green: -141, $blue: -114);\n  $third-stop:    adjust-color($base-color, $red: -86,  $green: -75,  $blue: -48);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $border-bottom: grayscale($border-bottom);\n    $fourth-stop:   grayscale($fourth-stop);\n    $inset-shadow:  grayscale($inset-shadow);\n    $second-stop:   grayscale($second-stop);\n    $text-shadow:   grayscale($text-shadow);\n    $third-stop:    grayscale($third-stop);\n  }\n\n  @include linear-gradient(top, $base-color 0%, $second-stop 50%, $third-stop 50%, $fourth-stop 100%);\n\n  border: 1px solid $border;\n  border-bottom: 1px solid $border-bottom;\n  border-radius: 5px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n\n  &:hover:not(:disabled) {\n    $first-stop-hover:  adjust-color($base-color, $red: -13, $green: -15, $blue: -18);\n    $second-stop-hover: adjust-color($base-color, $red: -66, $green: -62, $blue: -51);\n    $third-stop-hover:  adjust-color($base-color, $red: -93, $green: -85, $blue: -66);\n    $fourth-stop-hover: adjust-color($base-color, $red: -86, $green: -80, $blue: -63);\n\n    @if $grayscale == true {\n      $first-stop-hover:  grayscale($first-stop-hover);\n      $second-stop-hover: grayscale($second-stop-hover);\n      $third-stop-hover:  grayscale($third-stop-hover);\n      $fourth-stop-hover: grayscale($fourth-stop-hover);\n    }\n\n    @include linear-gradient(top, $first-stop-hover  0%,\n                                  $second-stop-hover 50%,\n                                  $third-stop-hover  50%,\n                                  $fourth-stop-hover 100%);\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $inset-shadow-active: adjust-color($base-color, $red: -111, $green: -116, $blue: -122);\n\n    @if $grayscale == true {\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    box-shadow: inset 0 0 20px 0 $inset-shadow-active;\n  }\n}\n\n// Pill Button\n@mixin pill($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border-bottom: adjust-color($base-color, $hue:  8, $saturation: -11%, $lightness: -26%);\n  $border-sides:  adjust-color($base-color, $hue:  4, $saturation: -21%, $lightness: -21%);\n  $border-top:    adjust-color($base-color, $hue: -1, $saturation: -30%, $lightness: -15%);\n  $inset-shadow:  adjust-color($base-color, $hue: -1, $saturation: -1%,  $lightness:  7%);\n  $stop-gradient: adjust-color($base-color, $hue:  8, $saturation:  14%, $lightness: -10%);\n  $text-shadow:   adjust-color($base-color, $hue:  5, $saturation: -19%, $lightness: -15%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border-bottom: grayscale($border-bottom);\n    $border-sides:  grayscale($border-sides);\n    $border-top:    grayscale($border-top);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border-top;\n  border-color: $border-top $border-sides $border-bottom;\n  border-radius: 16px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: normal;\n  line-height: 1;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color,                                $lightness: -4.5%);\n    $border-bottom:       adjust-color($base-color, $hue:  8, $saturation:  13.5%, $lightness: -32%);\n    $border-sides:        adjust-color($base-color, $hue:  4, $saturation: -2%,    $lightness: -27%);\n    $border-top:          adjust-color($base-color, $hue: -1, $saturation: -17%,   $lightness: -21%);\n    $inset-shadow-hover:  adjust-color($base-color,           $saturation: -1%,    $lightness:  3%);\n    $stop-gradient-hover: adjust-color($base-color, $hue:  8, $saturation: -4%,    $lightness: -15.5%);\n    $text-shadow-hover:   adjust-color($base-color, $hue:  5, $saturation: -5%,    $lightness: -22%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $border-bottom:       grayscale($border-bottom);\n      $border-sides:        grayscale($border-sides);\n      $border-top:          grayscale($border-top);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n      $text-shadow-hover:   grayscale($text-shadow-hover);\n    }\n\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n\n    background-clip: padding-box;\n    border: 1px solid $border-top;\n    border-color: $border-top $border-sides $border-bottom;\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n    text-shadow: 0 -1px 1px $text-shadow-hover;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $active-color:         adjust-color($base-color, $hue: 4,  $saturation: -12%,  $lightness: -10%);\n    $border-active:        adjust-color($base-color, $hue: 6,  $saturation: -2.5%, $lightness: -30%);\n    $border-bottom-active: adjust-color($base-color, $hue: 11, $saturation:  6%,   $lightness: -31%);\n    $inset-shadow-active:  adjust-color($base-color, $hue: 9,  $saturation:  2%,   $lightness: -21.5%);\n    $text-shadow-active:   adjust-color($base-color, $hue: 5,  $saturation: -12%,  $lightness: -21.5%);\n\n    @if $grayscale == true {\n      $active-color:         grayscale($active-color);\n      $border-active:        grayscale($border-active);\n      $border-bottom-active: grayscale($border-bottom-active);\n      $inset-shadow-active:  grayscale($inset-shadow-active);\n      $text-shadow-active:   grayscale($text-shadow-active);\n    }\n\n    background: $active-color;\n    border: 1px solid $border-active;\n    border-bottom: 1px solid $border-bottom-active;\n    box-shadow: inset 0 0 6px 3px $inset-shadow-active;\n    text-shadow: 0 -1px 1px $text-shadow-active;\n  }\n}\n\n// Flat Button\n@mixin flat($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n  }\n\n  background-color: $base-color;\n  border-radius: 3px;\n  border: 0;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  padding: $padding;\n  text-decoration: none;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled){\n    $base-color-hover:    adjust-color($base-color, $saturation: 4%, $lightness: 5%);\n\n    @if $grayscale == true {\n      $base-color-hover: grayscale($base-color-hover);\n    }\n\n    background-color: $base-color-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $base-color-active: adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n\n    @if $grayscale == true {\n      $base-color-active: grayscale($base-color-active);\n    }\n\n    background-color: $base-color-active;\n    cursor: pointer;\n  }\n}\n\n// Flexible grid\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n\n  @warn \"The flex-grid function is deprecated and will be removed in the next major version release\";\n}\n\n// Flexible gutter\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n\n  @warn \"The flex-gutter function is deprecated and will be removed in the next major version release\";\n}\n\n@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n\n  @warn \"The grid-width function is deprecated and will be removed in the next major version release\";\n}\n\n@function golden-ratio($value, $increment) {\n  @return modular-scale($increment, $value, $ratio: $golden);\n\n  @warn \"The golden-ratio function is deprecated and will be removed in the next major version release. Please use the modular-scale function, instead.\";\n}\n\n@mixin box-sizing($box) {\n  @include prefixer(box-sizing, $box, webkit moz spec);\n\n  @warn \"The box-sizing mixin is deprecated and will be removed in the next major version release. This property can now be used un-prefixed.\";\n}\n",
		"// Hover.css (http://ianlunn.github.io/Hover/)\n// Version: 2.0.2\n// Author: Ian Lunn @IanLunn\n// Author URL: http://ianlunn.co.uk/\n// Github: https://github.com/IanLunn/Hover\n// Made available under a MIT License:\n// http://www.opensource.org/licenses/mit-license.php\n// Hover.css Copyright Ian Lunn 2014. Generated with Sass.\n\n// Default project variables that can be overwritten locally\n@import \"effects/variables\";\n// Mixins to add relevant browser prefixes to animation selectors\n@import \"effects/prefixes\";\n@import \"effects/keyframes\";\n// Hacks to improve performance on various devices / browsers\n@import \"effects/hacks\";\n\n// Import the various effects folders\n@import \"effects/2d-transitions\";\n@import \"effects/background-transitions\";\n@import \"effects/border-transitions\";\n@import \"effects/icon-transitions\";\n@import \"effects/shadow-and-glow-transitions\";\n@import \"effects/speech-bubbles\";\n",
		"// DEFAULT OPTIONS\n\n// Prefix for Hover class names\n$nameSpace: 'hover' !default;\n\n// Hover state selectors shorthand\n$hover-states: '&:hover, &:active, &:focus';\n\n// Durations\n$fastDuration: 0.1s !default;\n$mediumDuration: 0.3s !default;\n$slowDuration: 0.5s !default;\n\n// Colors\n$primaryColor: #e1e1e1 !default;\n$secondaryColor: #666 !default;\n$highlightColor: #ccc !default;\n$activeColor: #2098D1 !default;\n$shadowColor: rgba(0, 0, 0, 0.6) !default;\n\n// Speech bubbles options\n//the width of the speech bubble tip\n$tipWidth: 10px !default;\n//the height of the speech bubble tip\n$tipHeight: 10px !default;\n$tipColor: $primaryColor !default;\n\n// Arrows options\n$spaceBetweenTextAndArrows: 2.2em !default;\n\n// Browser Prefixes - Which CSS prefixes should be used?\n$webkit: true !default;\n$moz: false !default;\n$ms: false !default;\n$o: false !default;\n",
		"// prefix declarations\n@mixin prefixed($property, $value) {\n    @if $webkit == true {\n        -webkit-#{$property}: #{$value}; }\n\n    @if $moz == true {\n        -moz-#{$property}: #{$value}; }\n\n    @if $ms == true {\n        -ms-#{$property}: #{$value}; }\n\n    @if $o == true {\n        -o-#{$property}: #{$value}; }\n\n    #{$property}: #{$value}; }\n",
		"// Keyframes mixin to add browser prefixes to animations\n@mixin keyframes($animation-name) {\n    @-webkit-keyframes #{$animation-name} {\n        @content; }\n\n    @keyframes #{$animation-name} {\n        @content; } }\n",
		"// As is often the case, some devices/browsers need additional code to get CSS to work\n// in the most desired way. These mixins are used to quickly drop in hacks for each element\n// Find out more here: https://github.com/IanLunn/Hover/wiki/Hacks-Explained\n\n@mixin hardwareAccel() {\n    // Improve performance on mobile/tablet devices\n    @include prefixed(transform, translateZ(0)); }\n\n@mixin improveAntiAlias() {\n    // Improve aliasing on mobile/tablet devices\n    box-shadow: 0 0 1px rgba(0, 0, 0, 0); }\n\n@mixin fontSmooth() {\n    -webkit-backface-visibility: hidden;\n    backface-visibility: hidden;\n    -moz-osx-font-smoothing: grayscale; }\n\n@mixin forceBlockLevel() {\n    // Transforms need to be block-level to work\n    display: inline-block;\n    vertical-align: middle; }\n\n@mixin hacks() {\n    @include forceBlockLevel();\n    @include hardwareAccel();\n    @include improveAntiAlias();\n    @include fontSmooth(); }\n",
		"/* 2D TRANSITIONS */\n@import \"2d-transitions/grow\";\n\n@import \"2d-transitions/shrink\";\n\n@import \"2d-transitions/pulse\";\n\n@import \"2d-transitions/pulse-grow\";\n\n@import \"2d-transitions/pulse-shrink\";\n\n@import \"2d-transitions/push\";\n\n@import \"2d-transitions/pop\";\n\n@import \"2d-transitions/bounce\";\n\n@import \"2d-transitions/rotate\";\n\n@import \"2d-transitions/grow-rotate\";\n\n@import \"2d-transitions/float\";\n\n@import \"2d-transitions/bob\";\n\n@import \"2d-transitions/hang\";\n\n@import \"2d-transitions/skew\";\n\n@import \"2d-transitions/skew-forward\";\n\n@import \"2d-transitions/skew-backward\";\n\n@import \"2d-transitions/wobble-move\";\n\n@import \"2d-transitions/wobble-fixed\";\n\n@import \"2d-transitions/buzz\";\n\n@import \"2d-transitions/buzz-out\";\n",
		"// Grow\n@mixin grow {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    @include prefixed(transition-property, transform);\n\n    #{$hover-states} {\n        @include prefixed(transform, scale(1.1)); } }\n",
		"// Shrink\n@mixin shrink {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    @include prefixed(transition-property, transform);\n\n    #{$hover-states} {\n        @include prefixed(transform, scale(.9)); } }\n",
		"// Pulse\n@include keyframes(#{$nameSpace}-pulse) {\n    25% {\n        @include prefixed(transform, scale(1.1)); }\n    75% {\n        @include prefixed(transform, scale(.9)); } }\n\n@mixin pulse {\n    @include hacks();\n\n    #{$hover-states} {\n        @include prefixed(animation-name, #{$nameSpace}-pulse);\n        @include prefixed(animation-duration, 1s);\n        @include prefixed(animation-timing-function, linear);\n        @include prefixed(animation-iteration-count, infinite); } }\n",
		"// Pulse Grow\n@include keyframes(#{$nameSpace}-pulse-grow) {\n    to {\n        @include prefixed(transform, scale(1.1)); } }\n\n@mixin pulse-grow {\n    @include hacks();\n\n    #{$hover-states} {\n        @include prefixed(animation-name, #{$nameSpace}-pulse-grow);\n        @include prefixed(animation-duration, $mediumDuration);\n        @include prefixed(animation-timing-function, linear);\n        @include prefixed(animation-iteration-count, infinite);\n        @include prefixed(animation-direction, alternate); } }\n",
		"// Pulse Shrink\n@include keyframes(#{$nameSpace}-pulse-shrink) {\n    to {\n        @include prefixed(transform, scale(.9)); } }\n\n@mixin pulse-shrink {\n    @include hacks();\n\n    #{$hover-states} {\n        @include prefixed(animation-name, #{$nameSpace}-pulse-shrink);\n        @include prefixed(animation-duration, $mediumDuration);\n        @include prefixed(animation-timing-function, linear);\n        @include prefixed(animation-iteration-count, infinite);\n        @include prefixed(animation-direction, alternate); } }\n",
		"// Push\n@include keyframes(#{$nameSpace}-push) {\n    50% {\n        @include prefixed(transform, scale(.8)); }\n    100% {\n        @include prefixed(transform, scale(1)); } }\n\n@mixin push {\n    @include hacks();\n\n    #{$hover-states} {\n        @include prefixed(animation-name, #{$nameSpace}-push);\n        @include prefixed(animation-duration, .3s);\n        @include prefixed(animation-timing-function, linear);\n        @include prefixed(animation-iteration-count, 1); } }\n",
		"// Pop\n@include keyframes(#{$nameSpace}-pop) {\n    50% {\n        @include prefixed(transform, scale(1.2)); } }\n\n@mixin pop {\n    @include hacks();\n\n    #{$hover-states} {\n        @include prefixed(animation-name, #{$nameSpace}-pop);\n        @include prefixed(animation-duration, $mediumDuration);\n        @include prefixed(animation-timing-function, linear);\n        @include prefixed(animation-iteration-count, 1); } }\n",
		"// Bounce\n\n// This was originally two mixins: bounce-in and bounce-out\n// Bounce-in used 1.2 as scale amount\n// Bounce-out use 0.8 as scale amount\n// You may enter any amount to scale by but the above are the recommended values\n@mixin bounce($amount) {\n    @include hacks();\n    @include prefixed(transition-duration, $slowDuration);\n\n    #{$hover-states} {\n        @include prefixed(transition-timing-function, cubic-bezier(.47,2.02,.31,-0.36));\n        @include prefixed(transform, scale($amount)); } }\n",
		"// Rotate\n@mixin rotate {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    @include prefixed(transition-property, transform);\n\n    #{$hover-states} {\n        @include prefixed(transform, rotate(4deg)); } }\n",
		"// Grow Rotate\n@mixin grow-rotate {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    @include prefixed(transition-property, transform);\n\n    #{$hover-states} {\n        @include prefixed(transform, scale(1.1) rotate(4deg)); } }\n",
		"// Float\n\n// Combination of float and sink mixins\n\n// Arguments\n// directions: up, down, default to up\n// amount: amount the element should be translated by, defaults to 4px\n// duration: duration of the sweep, defaults to $mediumDuration\n\n// Example use:\n// The following will produce an elment which, on hover, will be translated up 4px\n//     .button\n//         @include float\n\n// The following will produce an element that, on hover, will sink down by 8px over 0.4s\n//     .button\n//         @include float(down, 8px, 0.4s)\n\n@mixin float($direction: up, $amount: 4px, $duration: $mediumDuration) {\n    @include hacks();\n    @include prefixed(transition-duration, $duration);\n    @include prefixed(transition-property, transform);\n    @include prefixed(transition-timing-function, ease-out);\n\n    #{$hover-states} {\n        @if $direction == up {\n            @include prefixed(transform, translateY(-#{$amount})); }\n        @else if $direction == down {\n            @include prefixed(transform, translateY(#{$amount})); } } }\n",
		"// Bob\n@include keyframes(#{$nameSpace}-bob) {\n    0% {\n        @include prefixed(transform, translateY(-8px)); }\n    50% {\n        @include prefixed(transform, translateY(-4px)); }\n    100% {\n        @include prefixed(transform, translateY(-8px)); } }\n\n@include keyframes(#{$nameSpace}-bob-float) {\n    100% {\n        @include prefixed(transform, translateY(-8px)); } }\n\n@mixin bob {\n    @include hacks();\n\n    #{$hover-states} {\n        @include prefixed(animation-name, \"#{$nameSpace}-bob-float, #{$nameSpace}-bob\");\n        @include prefixed(animation-duration, \".3s, 1.5s\");\n        @include prefixed(animation-delay, \"0s, .3s\");\n        @include prefixed(animation-timing-function, \"ease-out, ease-in-out\");\n        @include prefixed(animation-iteration-count, \"1, infinite\");\n        @include prefixed(animation-fill-mode, \"forwards\");\n        @include prefixed(animation-direction, \"normal, alternate\"); } }\n",
		"// Hang\n@include keyframes(#{$nameSpace}-hang) {\n    0% {\n        @include prefixed(transform, translateY(8px)); }\n    50% {\n        @include prefixed(transform, translateY(4px)); }\n    100% {\n        @include prefixed(transform, translateY(8px)); } }\n\n@include keyframes(#{$nameSpace}-hang-sink) {\n    100% {\n        @include prefixed(transform, translateY(8px)); } }\n\n@mixin hang {\n    @include hacks();\n\n    #{$hover-states} {\n        @include prefixed(animation-name, \"#{$nameSpace}-hang-sink, #{$nameSpace}-hang\");\n        @include prefixed(animation-duration, \".3s, 1.5s\");\n        @include prefixed(animation-delay, \"0s, .3s\");\n        @include prefixed(animation-timing-function, \"ease-out, ease-in-out\");\n        @include prefixed(animation-iteration-count, \"1, infinite\");\n        @include prefixed(animation-fill-mode, \"forwards\");\n        @include prefixed(animation-direction, \"normal, alternate\"); } }\n",
		"// Skew\n@mixin skew {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    @include prefixed(transition-property, transform);\n\n    #{$hover-states} {\n        @include prefixed(transform, skew(-10deg)); } }\n",
		"// Skew Forward\n@mixin skew-forward {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    @include prefixed(transition-property, transform);\n    @include prefixed(transform-origin, 0 100%);\n\n    #{$hover-states} {\n        @include prefixed(transform, skew(-10deg)); } }\n",
		"// Skew Backward\n@mixin skew-backward {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    @include prefixed(transition-property, transform);\n    @include prefixed(transform-origin, 0 100%);\n\n    #{$hover-states} {\n        @include prefixed(transform, skew(10deg)); } }\n",
		"// Wobble Move\n\n// Creates a wobble effect by moving a whole element back and forth.\n\n// Arguments\n// direction: horizontal, vertical, diagonal-up, diagonal-down - defaults to horizontal\n// duration: duration of the wobble - defaults to $mediumDuration\n\n// Example use:\n// The following will create a wobble effect that moves an element horizontally on hover\n//     .button\n//         @include wobble-move\n\n// The following will create a wobble effect that moves an element vertically on hover\n//     .button\n//         @include wobble-move(vertical)\n\n// The following will create a wobble effect that moves an element diagonally up and then down\n// on hover. The wobble will last 2 seconds.\n//     .button\n//         @include wobble-move(diagonal-up, 2s)\n\n// The following will create a wobble effect that moves an element diagonally down and then up\n// on hover. The wobble will last 2 seconds.\n//     .button\n//         @include wobble-move(diagonal-up, 2s)\n\n$wobble-step-one: 8px;\n$wobble-step-two: 6px;\n$wobble-step-three: 4px;\n$wobble-step-four: 2px;\n$wobble-step-five: 1px;\n$wobble-step-six: 0;\n\n// Wobble Horizontal Keyframes\n@include keyframes(#{$nameSpace}-wobble-horizontal) {\n    16.65% {\n        @include prefixed(transform, translateX($wobble-step-one)); }\n    33.3% {\n        @include prefixed(transform, translateX(-$wobble-step-two)); }\n    49.95% {\n        @include prefixed(transform, translateX($wobble-step-three)); }\n    66.6% {\n        @include prefixed(transform, translateX(-$wobble-step-four)); }\n    83.25% {\n        @include prefixed(transform, translateX($wobble-step-five)); }\n    100% {\n        @include prefixed(transform, translateX($wobble-step-six)); } }\n\n// Wobble Vertical Keyframes\n@include keyframes(#{$nameSpace}-wobble-vertical) {\n    16.65% {\n        @include prefixed(transform, translateY($wobble-step-one)); }\n    33.3% {\n        @include prefixed(transform, translateY(-$wobble-step-two)); }\n    49.95% {\n        @include prefixed(transform, translateY($wobble-step-three)); }\n    66.6% {\n        @include prefixed(transform, translateY(-$wobble-step-four)); }\n    83.25% {\n        @include prefixed(transform, translateY($wobble-step-five)); }\n    100% {\n        @include prefixed(transform, translateY($wobble-step-six)); } }\n\n// Wobble Diagonal Up Keyframes\n@include keyframes(#{$nameSpace}-wobble-diagonal-up) {\n    16.65% {\n        @include prefixed(transform, translate($wobble-step-one, -$wobble-step-one)); }\n    33.3% {\n        @include prefixed(transform, translate(-$wobble-step-two, $wobble-step-two)); }\n    49.95% {\n        @include prefixed(transform, translate($wobble-step-three, -$wobble-step-three)); }\n    66.6% {\n        @include prefixed(transform, translate(-$wobble-step-four, $wobble-step-four)); }\n    83.25% {\n        @include prefixed(transform, translate($wobble-step-five, -$wobble-step-five)); }\n    100% {\n        @include prefixed(transform, translate($wobble-step-six, $wobble-step-six)); } }\n\n// Wobble Diagonal Down Keyframes\n@include keyframes(#{$nameSpace}-wobble-diagonal-down) {\n    16.65% {\n        @include prefixed(transform, translate($wobble-step-one, $wobble-step-one)); }\n    33.3% {\n        @include prefixed(transform, translate(-$wobble-step-two, -$wobble-step-two)); }\n    49.95% {\n        @include prefixed(transform, translate($wobble-step-three, $wobble-step-three)); }\n    66.6% {\n        @include prefixed(transform, translate(-$wobble-step-four, -$wobble-step-four)); }\n    83.25% {\n        @include prefixed(transform, translate($wobble-step-five, $wobble-step-five)); }\n    100% {\n        @include prefixed(transform, translate($wobble-step-six, $wobble-step-six)); } }\n\n// Wobble-move mixin\n@mixin wobble-move($direction: horizontal, $duration: $mediumDuration) {\n    @include hacks();\n\n    #{$hover-states} {\n        @include prefixed(animation-name, #{$nameSpace}-wobble-#{$direction});\n        @include prefixed(animation-duration, $duration);\n        @include prefixed(animation-timing-function, ease-in-out);\n        @include prefixed(animation-iteration-count, 1); } }\n",
		"// Wobble Fixed\n\n// Creates a wobble effect for elements without moving their position.\n\n// Arguments\n// origin: top, bottom, or none - defaults to none\n// duration: duration of the wobble - defaults to $mediumDuration\n\n// Example use:\n// The following will create a wobble effect from the center of an element, so both top and bottom appear to be animated.\n//     .button\n//         @include wobble-fixed\n\n// The following will create a wobble effect on the bottom of an element, so the top stays fixed and the bottom is animated\n//     .button\n//         @include wobble-fixed(bottom)\n\n// The following will create a wobble effect on the top of an element, so the bottom stays fixed and the top is animated. The animation will last 2 seconds.\n//     .button\n//         @include wobble-fixed(top, 2s)\n\n@include keyframes(#{$nameSpace}-wobble) {\n    16.65% {\n        @include prefixed(transform, skew(-12deg)); }\n    33.3% {\n        @include prefixed(transform, skew(10deg)); }\n    49.95% {\n        @include prefixed(transform, skew(-6deg)); }\n    66.6% {\n        @include prefixed(transform, skew(4deg)); }\n    83.25% {\n        @include prefixed(transform, skew(-2deg)); }\n    100% {\n        @include prefixed(transform, skew(0)); } }\n\n\n@mixin wobble-fixed($origin: none, $duration: $mediumDuration) {\n    @include hacks();\n\n    @if $origin == top {\n        @include prefixed(transform-origin, 0 100%); }\n\n    @else if $origin == bottom {\n        @include prefixed(transform-origin, 100% 0); }\n\n    #{$hover-states} {\n        @include prefixed(animation-name, #{$nameSpace}-wobble);\n        @include prefixed(animation-duration, 1s);\n        @include prefixed(animation-timing-function, ease-in-out);\n        @include prefixed(animation-iteration-count, 1); } }\n",
		"// Buzz\n@include keyframes(#{$nameSpace}-buzz) {\n    50% {\n        @include prefixed(transform, translateX(3px) rotate(2deg)); }\n    100% {\n        @include prefixed(transform, translateX(-3px) rotate(-2deg)); } }\n\n@mixin buzz {\n    @include hacks();\n\n    #{$hover-states} {\n        @include prefixed(animation-name, #{$nameSpace}-buzz);\n        @include prefixed(animation-duration, .15s);\n        @include prefixed(animation-timing-function, linear);\n        @include prefixed(animation-iteration-count, infinite); } }\n",
		"// Buzz Out\n@include keyframes(#{$nameSpace}-buzz-out) {\n    10% {\n        @include prefixed(transform, translateX(3px) rotate(2deg)); }\n    20% {\n        @include prefixed(transform, translateX(-3px) rotate(-2deg)); }\n    30% {\n        @include prefixed(transform, translateX(3px) rotate(2deg)); }\n    40% {\n        @include prefixed(transform, translateX(-3px) rotate(-2deg)); }\n    50% {\n        @include prefixed(transform, translateX(2px) rotate(1deg)); }\n    60% {\n        @include prefixed(transform, translateX(-2px) rotate(-1deg)); }\n    70% {\n        @include prefixed(transform, translateX(2px) rotate(1deg)); }\n    80% {\n        @include prefixed(transform, translateX(-2px) rotate(-1deg)); }\n    90% {\n        @include prefixed(transform, translateX(1px) rotate(0)); }\n    100% {\n        @include prefixed(transform, translateX(-1px) rotate(0)); } }\n\n@mixin buzz-out {\n    @include hacks();\n\n    #{$hover-states} {\n        @include prefixed(animation-name, #{$nameSpace}-buzz-out);\n        @include prefixed(animation-duration, .75s);\n        @include prefixed(animation-timing-function, linear);\n        @include prefixed(animation-iteration-count, 1); } }\n",
		"/* BACKGROUND TRANSITIONS */\n@import \"background-transitions/fade\";\n\n@import \"background-transitions/back-pulse\";\n\n@import \"background-transitions/sweep\";\n\n@import \"background-transitions/bounce-to\";\n\n@import \"background-transitions/radial\";\n\n@import \"background-transitions/rectangle\";\n\n@import \"background-transitions/shutter-in-horizontal\";\n\n@import \"background-transitions/shutter-out-horizontal\";\n\n@import \"background-transitions/shutter-in-vertical\";\n\n@import \"background-transitions/shutter-out-vertical\";\n",
		"// Fade\n@mixin fade {\n    @include hacks();\n    overflow: hidden;\n    @include prefixed(transition-duration, $mediumDuration);\n    @include prefixed(transition-property, \"color, background-color\");\n\n    #{$hover-states} {\n        background-color: $activeColor;\n        color: white; } }\n",
		"// Back Pulse\n@include keyframes(#{$nameSpace}-back-pulse) {\n    50% {\n        background-color: rgba(32, 152, 209, .75); } }\n\n@mixin back-pulse {\n    @include hacks();\n    overflow: hidden;\n    @include prefixed(transition-duration, $slowDuration);\n    @include prefixed(transition-property, \"color, background-color\");\n\n    #{$hover-states} {\n        @include prefixed(animation-name, #{$nameSpace}-back-pulse);\n        @include prefixed(animation-duration, 1s);\n        @include prefixed(animation-delay, $slowDuration);\n        @include prefixed(animation-timing-function, linear);\n        @include prefixed(animation-iteration-count, infinite);\n        background-color: $activeColor;\n        background-color: rgba(32, 152, 209, 1);\n        color: white; } }\n",
		"// Sweep mixin\n\n// Uses a pseudo element to sweep a background color to the opposite side of an element\n\n// Arguments\n// directions: left, right, top, bottom\n//    All directions are 'towards' so left = sweep from right to left\n// hover-bg: color the background of the element should be on hover, this is the background\n//     color of the pseudo element that sweeps across.\n// hover-color: font color of the element on hover.\n// border-radius: if your element has a border radius other than 0 you must match it here\n// pseudo: before or after, defaults to before\n// duration: duration of the sweep, defaults to $mediumDuration\n\n// Example use:\n// The following will produce a white button with black text. On hover the text will\n//    transition from black to white and a ::before element with a black background will\n//    sweep up from the bottom to the top. The sweep will last the length of time set with\n//    the variable $mediumDuration\n//     .button\n//         @include sweep(top, black, white)\n//         background: white\n//         color: black\n\n// The following will produce a white button with black text and a 5px border-radius.\n//    On hover the text will transition from black to white. An ::after element with a black\n//    background will sweep across from left to right. The ::after will also have a 5px\n//    border-radius. The sweep will last 0.2s\n//     .button\n//         @include sweep(right, black, white, 5px, after, 0.2s)\n//         border-radius: 5px\n//         background: white\n//         color: black\n\n@mixin sweep($direction, $hover-bg, $hover-color, $border-radius: 0, $pseudo: before, $duration: $mediumDuration) {\n    @include hacks();\n    @include prefixed(transition-property, color);\n    @include prefixed(transition-duration, #{$duration});\n    position: relative;\n    &::#{$pseudo} {\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-duration, #{$duration});\n        @include prefixed(transition-timing-function, ease-out);\n        content: '';\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background: $hover-bg;\n        border-radius: $border-radius;\n\n        // Set the transform origin depending on direction\n        @if $direction == right {\n            @include prefixed(transform-origin, 0 50%); }\n        @else if $direction == left {\n            @include prefixed(transform-origin, 100% 50%); }\n        @else if $direction == top {\n            @include prefixed(transform-origin, 50% 100%); }\n        @else if $direction == bottom {\n            @include prefixed(transform-origin, 50% 0); }\n\n        // Set the scale type (X or Y) depending on direction\n        @if $direction == right or $direction == left {\n            @include prefixed(transform, scaleX(0)); }\n        @if $direction == top or $direction == bottom {\n            @include prefixed(transform, scaleY(0)); } }\n\n    #{$hover-states} {\n        color: $hover-color;\n        &::#{$pseudo} {\n            // Set the hover scale type (X or Y) depending on direction\n            @if $direction == right or $direction == left {\n                @include prefixed(transform, scaleX(1)); }\n            @if $direction == top or $direction == bottom {\n                @include prefixed(transform, scaleY(1)); } } } }\n",
		"// Bounce To mixin\n\n// Uses a pseudo element to bounce a background color to the opposite side of an element\n\n// Arguments\n// directions: left, right, top, bottom\n// hover-bg: color the background of the element should be on hover, this is the background\n//     color of the pseudo element that bounces across the element.\n// hover-color: text color of the element on hover.\n// border-radius: if your element has a border radius other than 0 you must match it here\n// pseudo: before or after, defaults to before\n// duration: duration of the bounce, defaults to $slowDuration\n\n// Example use:\n// The following will produce a white button with black text. On hover the text will\n//    transition from black to white and a ::before element with a black background will\n//    bounce up from the bottom to the top. The bounce will last the length of time set with\n//    the variable $slowDuration\n//     .button\n//         @include bounce-to(top, black, white)\n//         background: white\n//         color: black\n\n// The following will produce a white button with black text and a 5px border-radius.\n//    On hover the text will transition from black to white. An ::after element with a black\n//    background will bounce across from left to right. The ::after will also have a 5px\n//    border-radius. The bounce will last 0.2s\n//     .button\n//         @include bounce-to(right, black, white, 5px, after, 0.2s)\n//         border-radius: 5px\n//         background: white\n//         color: black\n\n@mixin bounce-to($direction, $hover-bg, $hover-color, $border-radius: 0, $pseudo: before, $duration: $slowDuration) {\n    @include hacks();\n    @include prefixed(transition-property, color);\n    @include prefixed(transition-duration, #{$duration});\n    position: relative;\n    &::#{$pseudo} {\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-duration, #{$duration});\n        @include prefixed(transition-timing-function, ease-out);\n        content: '';\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background: $hover-bg;\n        border-radius: $border-radius;\n\n        // Set the transform origin depending on direction\n        @if $direction == right {\n            @include prefixed(transform-origin, 0 50%); }\n        @else if $direction == left {\n            @include prefixed(transform-origin, 100% 50%); }\n        @else if $direction == top {\n            @include prefixed(transform-origin, 50% 100%); }\n        @else if $direction == bottom {\n            @include prefixed(transform-origin, 50% 0); }\n\n        // Set the scale type (X or Y) depending on direction\n        @if $direction == left or $direction == right {\n            @include prefixed(transform, scaleX(0)); }\n        @else if $direction == bottom or $direction == top {\n            @include prefixed(transform, scaleY(0)); } }\n\n    #{$hover-states} {\n        color: $hover-color;\n        &::#{$pseudo} {\n            @include prefixed(transition-timing-function, cubic-bezier(0.52, 1.64, 0.37, 0.66));\n            // Set the hover scale type (X or Y) depending on direction\n            @if $direction == right or $direction == left {\n                @include prefixed(transform, scaleX(1)); }\n            @else if $direction == top or $direction == bottom {\n                @include prefixed(transform, scaleY(1)); } } } }\n",
		"// Radial Mixin\n\n// Uses a pseudo element to expand or contract a background color from or to the center of an element\n\n// Arguments\n// directions: in, out\n// initial-bg: background color of your element in it's initial state.\n// hover-bg: color the background of the element should be on hover, this is the background\n//     color of the pseudo element that covers the initial background.\n// hover-color: text color of the element on hover.\n// pseudo: before or after, defaults to before\n// duration: duration of the animation, defaults to $mediumDuration\n\n// Example use:\n// The following will produce a white button with black text. On hover the text will\n//    transition from black to red and a ::before element with a black background will\n//    expand from the center of the element in a radial pattern. The animation will last the\n//    length of time set with the variable $mediumDuration\n//     .button\n//         @include radial(out, white, black, red)\n//         color: black\n\n// The following will produce a white button with black text. On hover the text will\n//    transition from black to red. On hover the white background will contract towards\n//    the center of the element in a radial pattern, leaving the black background underneath\n//    exposed. The animation will last 0.2s\n//     .button\n//         @include radial(in, white, black, red, after, 0.2s)\n//         color: black\n\n@mixin radial($direction, $initial-bg, $hover-bg, $hover-color, $pseudo: before, $duration: $mediumDuration) {\n    @include hacks();\n    @include prefixed(transition-property, color);\n    @include prefixed(transition-duration, $mediumDuration);\n    position: relative;\n    overflow: hidden;\n    @if $direction == in {\n        background: $hover-bg; }\n    @else if $direction == out {\n        background: $initial-bg; }\n\n    &::#{$pseudo} {\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-duration, #{$duration});\n        @include prefixed(transition-timing-function, ease-out);\n        content: '';\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        border-radius: 100%;\n\n        @if $direction == in {\n            @include prefixed(transform, scale(2));\n            background: $initial-bg; }\n        @else if $direction == out {\n            @include prefixed(transform, scale(0));\n            background: $hover-bg; } }\n\n    #{$hover-states} {\n        color: $hover-color;\n\n        &::#{$pseudo} {\n            @if $direction == in {\n                @include prefixed(transform, scale(0)); }\n            @else if $direction == out {\n                @include prefixed(transform, scale(2)); } } } }\n",
		"// Rectangle Mixin\n\n// Uses a pseudo element to expand or contract a background color from or to the center of an element\n\n// Arguments\n// directions: in, out\n// initial-bg: background color of your element in it's initial state.\n// hover-bg: color the background of the element should be on hover, this is the background\n//     color of the pseudo element that covers the initial background.\n// hover-color: text color of the element on hover.\n// border-radius: Enter the border-radius of your element here. Defaults to 0.\n// pseudo: before or after, defaults to before.\n// duration: duration of the animation, defaults to $mediumDuration.\n\n// Example use:\n// The following will produce a white button with black text. On hover the text will\n//    transition from black to red and a ::before element with a black background will\n//    expand from the center of the element. The animation will last the\n//    length of time set with the variable $mediumDuration\n//     .button\n//         @include radial(out, white, black, red)\n//         color: black\n\n// The following will produce a white button with black text. On hover the text will\n//    transition from black to red. On hover the white background will contract towards\n//    the center of the element, leaving the black background underneath\n//    exposed. The animation will last 0.2s\n//     .button\n//         @include radial(in, white, black, red, after, 0.2s)\n//         color: black\n\n@mixin rectangle($direction, $initial-bg, $hover-bg, $hover-color, $border-radius: 0, $pseudo: before, $duration: $mediumDuration) {\n    @include hacks();\n    @include prefixed(transition-property, color);\n    @include prefixed(transition-duration, #{$duration});\n    position: relative;\n    border-radius: $border-radius;\n\n    @if $direction == in {\n        background: $hover-bg; }\n    @else if $direction == out {\n        background: $initial-bg; }\n\n    &::#{$pseudo} {\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-duration, #{$duration});\n        @include prefixed(transition-timing-function, ease-out);\n        content: '';\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        border-radius: $border-radius;\n\n        @if $direction == in {\n            @include prefixed(transform, scale(1));\n            background: $initial-bg; }\n        @else if $direction == out {\n            @include prefixed(transform, scale(0));\n            background: $hover-bg; } }\n\n    #{$hover-states} {\n        color: $hover-color;\n\n        &::#{$pseudo} {\n            @if $direction == in {\n                @include prefixed(transform, scale(0)); }\n            @else if $direction == out {\n                @include prefixed(transform, scale(1)); } } } }\n",
		"// Shutter In Horizontal\n@mixin shutter-in-horizontal {\n    @include hacks();\n    position: relative;\n    background: $activeColor;\n    @include prefixed(transition-property, color);\n    @include prefixed(transition-duration, $mediumDuration);\n\n    &::before {\n        content: \"\";\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        background: $primaryColor;\n        @include prefixed(transform, scaleX(1));\n        @include prefixed(transform-origin, 50%);\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-duration, $mediumDuration);\n        @include prefixed(transition-timing-function, ease-out); }\n\n    #{$hover-states} {\n        color: white;\n\n        &::before {\n            @include prefixed(transform, scaleX(0)); } } }\n",
		"// Shutter Out Horizontal\n@mixin shutter-out-horizontal {\n    @include hacks();\n    position: relative;\n    background: $primaryColor;\n    @include prefixed(transition-property, color);\n    @include prefixed(transition-duration, $mediumDuration);\n\n    &::before {\n        content: \"\";\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        background: $activeColor;\n        @include prefixed(transform, scaleX(0));\n        @include prefixed(transform-origin, 50%);\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-duration, $mediumDuration);\n        @include prefixed(transition-timing-function, ease-out); }\n\n    #{$hover-states} {\n        color: white;\n\n        &::before {\n            @include prefixed(transform, scaleX(1)); } } }\n",
		"// Shutter In Vertical\n@mixin shutter-in-vertical {\n    @include hacks();\n    position: relative;\n    background: $activeColor;\n    @include prefixed(transition-property, color);\n    @include prefixed(transition-duration, $mediumDuration);\n\n    &::before {\n        content: \"\";\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        background: $primaryColor;\n        @include prefixed(transform, scaleY(1));\n        @include prefixed(transform-origin, 50%);\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-duration, $mediumDuration);\n        @include prefixed(transition-timing-function, ease-out); }\n\n    #{$hover-states} {\n        color: white;\n\n        &::before {\n            @include prefixed(transform, scaleY(0)); } } }\n",
		"// Shutter Out Vertical\n@mixin shutter-out-vertical {\n    @include hacks();\n    position: relative;\n    background: $primaryColor;\n    @include prefixed(transition-property, color);\n    @include prefixed(transition-duration, $mediumDuration);\n\n    &::before {\n        content: \"\";\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        background: $activeColor;\n        @include prefixed(transform, scaleY(0));\n        @include prefixed(transform-origin, 50%);\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-duration, $mediumDuration);\n        @include prefixed(transition-timing-function, ease-out); }\n\n    #{$hover-states} {\n        color: white;\n\n        &::before {\n            @include prefixed(transform, scaleY(1)); } } }\n",
		"/* BORDER TRANSITIONS */\n@import \"border-transitions/border-fade\";\n\n@import \"border-transitions/hollow\";\n\n@import \"border-transitions/trim\";\n\n@import \"border-transitions/ripple-out\";\n\n@import \"border-transitions/ripple-in\";\n\n@import \"border-transitions/outline-out\";\n\n@import \"border-transitions/outline-in\";\n\n@import \"border-transitions/round-corners\";\n\n@import \"border-transitions/underline\";\n\n@import \"border-transitions/overline-from-left\";\n\n@import \"border-transitions/overline-from-center\";\n\n@import \"border-transitions/overline-from-right\";\n\n@import \"border-transitions/reveal\";\n\n@import \"border-transitions/underline-reveal\";\n\n@import \"border-transitions/overline-reveal\";\n",
		"// Border Fade\n@mixin border-fade {\n    $borderWidth: 4px;\n\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    @include prefixed(transition-property, box-shadow);\n    box-shadow: {\n            inset 0 0 0 $borderWidth $primaryColor,\n            0 0 1px rgba(0, 0, 0, 0) {} } // Hack to improve aliasing on mobile/tablet devices\n\n    #{$hover-states} {\n        box-shadow: {\n            inset 0 0 0 $borderWidth $activeColor,\n            0 0 1px rgba(0, 0, 0, 0) {} } } } // Hack to improve aliasing on mobile/tablet devices\n",
		"// Hollow\n@mixin hollow {\n    $borderWidth: 4px;\n\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    @include prefixed(transition-property, background);\n    box-shadow: {\n        inset 0 0 0 $borderWidth $primaryColor,\n        0 0 1px rgba(0, 0, 0, 0) {} } // Hack to improve aliasing on mobile/tablet devices\n\n    #{$hover-states} {\n        background: none; } }\n",
		"// Trim\n@mixin trim {\n    $outerBorderWidth: 4px;\n    $innerBorderWidth: 4px;\n\n    @include hacks();\n    position: relative;\n\n    &::before {\n        content: '';\n        position: absolute;\n        border: white solid $innerBorderWidth;\n        top: $outerBorderWidth;\n        left: $outerBorderWidth;\n        right: $outerBorderWidth;\n        bottom: $outerBorderWidth;\n        opacity: 0;\n        @include prefixed(transition-duration, $mediumDuration);\n        @include prefixed(transition-property, opacity); }\n\n    &:hover::before,\n    &:focus::before,\n    &:active::before {\n        opacity: 1; } }\n",
		"// Ripple Out\n@include keyframes(#{$nameSpace}-ripple-out) {\n    100% {\n        top: -(6px + 6px);\n        right: -(6px + 6px);\n        bottom: -(6px + 6px);\n        left: -(6px + 6px);\n        opacity: 0; } }\n\n@mixin ripple-out {\n    $outerBorderWidth: 6px;\n    $innerBorderWidth: 6px;\n\n    @include hacks();\n    position: relative;\n\n    &::before {\n        content: '';\n        position: absolute;\n        border: $primaryColor solid $outerBorderWidth;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        @include prefixed(animation-duration, 1s); }\n\n    &:hover::before,\n    &:focus::before,\n    &:active::before {\n        @include prefixed(animation-name, #{$nameSpace}-ripple-out); } }\n",
		"// Ripple In\n@include keyframes(#{$nameSpace}-ripple-in) {\n    100% {\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        opacity: 1; } }\n\n@mixin ripple-in {\n    $outerBorderWidth: 4px;\n    $innerBorderWidth: 4px;\n\n    @include hacks();\n    position: relative;\n\n    &::before {\n        content: '';\n        position: absolute;\n        border: $primaryColor solid $outerBorderWidth;\n        top: -(6px + 6px);\n        right: -(6px + 6px);\n        bottom: -(6px + 6px);\n        left: -(6px + 6px);\n        opacity: 0;\n        @include prefixed(animation-duration, 1s); }\n\n    &:hover::before,\n    &:focus::before,\n    &:active::before {\n        @include prefixed(animation-name, #{$nameSpace}-ripple-in); } }\n",
		"// Outline Out\n@mixin outline-out {\n    $outerBorderWidth: 4px;\n    $innerBorderWidth: 4px;\n\n    @include hacks();\n    position: relative;\n\n    &::before {\n        content: '';\n        position: absolute;\n        border: $primaryColor solid $outerBorderWidth;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        @include prefixed(transition-duration, .3s);\n        @include prefixed(transition-property, \"top, right, bottom, left\"); }\n\n    &:hover::before,\n    &:focus::before,\n    &:active::before {\n        top: -($outerBorderWidth + $innerBorderWidth);\n        right: -($outerBorderWidth + $innerBorderWidth);\n        bottom: -($outerBorderWidth + $innerBorderWidth);\n        left: -($outerBorderWidth + $innerBorderWidth); } }\n",
		"// Outline In\n@mixin outline-in {\n    $outerBorderWidth: 4px;\n    $innerBorderWidth: 4px;\n\n    @include hacks();\n    position: relative;\n\n    &::before {\n        pointer-events: none;\n        content: '';\n        position: absolute;\n        border: $primaryColor solid $outerBorderWidth;\n        top: -($outerBorderWidth + $innerBorderWidth) * 2;\n        right: -($outerBorderWidth + $innerBorderWidth) * 2;\n        bottom: -($outerBorderWidth + $innerBorderWidth) * 2;\n        left: -($outerBorderWidth + $innerBorderWidth) * 2;\n        opacity: 0;\n        @include prefixed(transition-duration, .3s);\n        @include prefixed(transition-property, \"top, right, bottom, left\"); }\n\n    &:hover::before,\n    &:focus::before,\n    &:active::before {\n        top: -($outerBorderWidth + $innerBorderWidth);\n        right: -($outerBorderWidth + $innerBorderWidth);\n        bottom: -($outerBorderWidth + $innerBorderWidth);\n        left: -($outerBorderWidth + $innerBorderWidth);\n        opacity: 1; } }\n",
		"// Round Corners\n@mixin round-corners {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    @include prefixed(transition-property, border-radius);\n\n    #{$hover-states} {\n        border-radius: 1em; } }\n",
		"// Underline\n// Use to animate an underline on an element on hover\n\n// Arguments:\n// from = the origin of the underline: left, right, center\n// color = color of the line\n// height = thickness of the line\n// duration = length of time the animation takes\n// pseudo = before or after\n\n@mixin underline($from, $color, $height, $duration: $mediumDuration, $pseudo: before) {\n    @include hacks();\n    position: relative;\n    overflow: hidden;\n\n    &::#{$pseudo} {\n        @include prefixed(transition-property, \"left, right\");\n        @include prefixed(transition-duration, $duration);\n        @include prefixed(transition-timing-function, ease-out);\n        content: '';\n        position: absolute;\n        z-index: -1;\n        bottom: 0;\n        background: $color;\n        height: $height;\n\n        @if $from == left {\n            right: 100%;\n            left: 0; }\n        @else if $from == right {\n            right: 0;\n            left: 100%; }\n        @else if $from == center {\n            right: 50%;\n            left: 50%; } }\n\n    #{$hover-states} {\n        &::#{$pseudo} {\n            left: 0;\n            right: 0; } } }\n",
		"// Overline From Left\n@mixin overline-from-left {\n    $duration: $mediumDuration;\n\n    @include hacks();\n    position: relative;\n    overflow: hidden;\n\n    &::before {\n        content: \"\";\n        position: absolute;\n        z-index: -1;\n        left: 0;\n        right: 100%;\n        top: 0;\n        background: $activeColor;\n        height: 4px;\n        @include prefixed(transition-property, \"right\");\n        @include prefixed(transition-duration, $duration);\n        @include prefixed(transition-timing-function, ease-out); }\n\n    #{$hover-states} {\n        &::before {\n            right: 0; } } }\n",
		"// Overline From Center\n@mixin overline-from-center {\n    $duration: $mediumDuration;\n\n    @include hacks();\n    position: relative;\n    overflow: hidden;\n\n    &::before {\n        content: \"\";\n        position: absolute;\n        z-index: -1;\n        left: 50%;\n        right: 50%;\n        top: 0;\n        background: $activeColor;\n        height: 4px;\n        @include prefixed(transition-property, \"left, right\");\n        @include prefixed(transition-duration, $duration);\n        @include prefixed(transition-timing-function, ease-out); }\n\n    #{$hover-states} {\n        &::before {\n            left: 0;\n            right: 0; } } }\n",
		"// Overline From Right\n@mixin overline-from-right {\n    $duration: $mediumDuration;\n\n    @include hacks();\n    position: relative;\n    overflow: hidden;\n\n    &::before {\n        content: \"\";\n        position: absolute;\n        z-index: -1;\n        left: 100%;\n        right: 0;\n        top: 0;\n        background: $activeColor;\n        height: 4px;\n        @include prefixed(transition-property, \"left\");\n        @include prefixed(transition-duration, $duration);\n        @include prefixed(transition-timing-function, ease-out); }\n\n    #{$hover-states} {\n        &::before {\n            left: 0; } } }\n",
		"// Reveal\n@mixin reveal {\n    $duration: #{$fastDuration};\n\n    @include hacks();\n    position: relative;\n    overflow: hidden;\n\n    &::before {\n        content: \"\";\n        position: absolute;\n        z-index: -1;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n        border-color: #{$activeColor};\n        border-style: solid;\n        border-width: 0;\n        @include prefixed(transition-property, border-width);\n        @include prefixed(transition-duration, #{$duration});\n        @include prefixed(transition-timing-function, ease-out); }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(transform, translateY(0));\n            border-width: 4px; } } }\n",
		"// Underline Reveal\n@mixin underline-reveal {\n    $duration: $mediumDuration;\n\n    @include hacks();\n    position: relative;\n    overflow: hidden;\n\n    &::before {\n        content: \"\";\n        position: absolute;\n        z-index: -1;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background: $activeColor;\n        height: 4px;\n        @include prefixed(transform, translateY(4px));\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-duration, $duration);\n        @include prefixed(transition-timing-function, ease-out); }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(transform, translateY(0)); } } }\n",
		"// Overline Reveal\n@mixin overline-reveal {\n    $duration: $mediumDuration;\n\n    @include hacks();\n    position: relative;\n    overflow: hidden;\n\n    &::before {\n        content: \"\";\n        position: absolute;\n        z-index: -1;\n        left: 0;\n        right: 0;\n        top: 0;\n        background: $activeColor;\n        height: 4px;\n        @include prefixed(transform, translateY(-4px));\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-duration, $duration);\n        @include prefixed(transition-timing-function, ease-out); }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(transform, translateY(0)); } } }\n",
		"/* ICON TRANSITIONS */\n@import \"icon-transitions/icon-back\";\n\n@import \"icon-transitions/icon-forward\";\n\n@import \"icon-transitions/icon-down\";\n\n@import \"icon-transitions/icon-up\";\n\n@import \"icon-transitions/icon-spin\";\n\n@import \"icon-transitions/icon-drop\";\n\n@import \"icon-transitions/icon-fade\";\n\n@import \"icon-transitions/icon-float-away\";\n\n@import \"icon-transitions/icon-sink-away\";\n\n@import \"icon-transitions/icon-grow\";\n\n@import \"icon-transitions/icon-shrink\";\n\n@import \"icon-transitions/icon-pulse\";\n\n@import \"icon-transitions/icon-pulse-grow\";\n\n@import \"icon-transitions/icon-pulse-shrink\";\n\n@import \"icon-transitions/icon-push\";\n\n@import \"icon-transitions/icon-pop\";\n\n@import \"icon-transitions/icon-bounce\";\n\n@import \"icon-transitions/icon-rotate\";\n\n@import \"icon-transitions/icon-grow-rotate\";\n\n@import \"icon-transitions/icon-float\";\n\n@import \"icon-transitions/icon-sink\";\n\n@import \"icon-transitions/icon-bob\";\n\n@import \"icon-transitions/icon-hang\";\n\n@import \"icon-transitions/icon-wobble-horizontal\";\n\n@import \"icon-transitions/icon-wobble-vertical\";\n\n@import \"icon-transitions/icon-buzz\";\n\n@import \"icon-transitions/icon-buzz-out\";\n",
		"// Icon Back\n@mixin icon-back {\n    @include hacks();\n    position: relative;\n    padding-left: 2.2em;\n    @include prefixed(transition-duration, $fastDuration);\n\n    &::before {\n        content: \"\\f137\";\n        position: absolute;\n        left: 1em;\n        padding: 0 1px;\n        font-family: FontAwesome;\n        @include prefixed(transform, translateZ(0));\n        @include prefixed(transition-duration, $fastDuration);\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-timing-function, ease-out); }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(transform, translateX(-4px)); } } }\n",
		"// Icon Forward\n@mixin icon-forward {\n    @include hacks();\n    @include prefixed(transition-duration, $fastDuration);\n    position: relative;\n    padding-right: 2.2em;\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        @include prefixed(transition-duration, $fastDuration);\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-timing-function, ease-out);\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(transform, translateX(4px)); } } }\n",
		"// Icon Down\n@include keyframes(#{$nameSpace}-icon-down) {\n    0%,\n    50%,\n    100% {\n        @include prefixed(transform, translateY(0)); }\n    25%,\n    75% {\n        @include prefixed(transform, translateY(6px)); } }\n\n// Icon Down\n@mixin icon-down {\n    @include hacks();\n    position: relative;\n    padding-right: #{$spaceBetweenTextAndArrows};\n\n    &::before {\n        content: \"\\f01a\";\n        position: absolute;\n        right: 1em;\n        padding: 0 1px;\n        font-family: FontAwesome;\n        @include prefixed(transform, translateZ(0)); }\n\n    #{$hover-states} {\n\n        &::before {\n            @include prefixed(animation-name, #{$nameSpace}-icon-down);\n            @include prefixed(animation-duration, 0.75s);\n            @include prefixed(animation-timing-function, ease-out); } } }\n",
		"// Icon Up\n@include keyframes(#{$nameSpace}-icon-up) {\n    0%,\n    50%,\n    100% {\n        @include prefixed(transform, translateY(0)); }\n    25%,\n    75% {\n        @include prefixed(transform, translateY(-6px)); } }\n\n// Icon Up\n@mixin icon-up {\n    @include hacks();\n    position: relative;\n    padding-right: 2.2em;\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(animation-name, #{$nameSpace}-icon-up);\n            @include prefixed(animation-duration, 0.75s);\n            @include prefixed(animation-timing-function, ease-out); } } }\n",
		"// Icon Spin\n@mixin icon-spin {\n    @include hacks();\n    position: relative;\n    padding-right: 2.2em;\n\n    &::before {\n        @include prefixed(transition-duration, 1s);\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-timing-function, ease-in-out);\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(transform, rotate(360deg)); } } }\n",
		"// Icon Drop\n@include keyframes(#{$nameSpace}-icon-drop) {\n    0% {\n        opacity: 0; }\n    50% {\n        @include prefixed(transform, translateY(-100%));\n        opacity: 0; }\n    51%,\n    100% {\n        opacity: 1; } }\n\n// Icon Drop\n@mixin icon-drop {\n    @include hacks();\n    position: relative;\n    padding-right: #{$spaceBetweenTextAndArrows};\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        content: '';\n        position: absolute;\n        right: 1em;\n        opacity: 1;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(transition-duration, #{$mediumDuration});\n            @include prefixed(animation-name, #{$nameSpace}-icon-drop);\n            @include prefixed(animation-duration, #{$slowDuration});\n            @include prefixed(animation-delay, #{$mediumDuration});\n            @include prefixed(animation-fill-mode, forwards);\n            @include prefixed(animation-timing-function, ease-in-out);\n            @include prefixed(animation-timing-function, cubic-bezier(0.52,1.64,0.37,0.66));\n            opacity: 0; } } }\n",
		"// Icon Fade\n@mixin icon-fade {\n    @include hacks();\n    position: relative;\n    padding-right: #{$spaceBetweenTextAndArrows};\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        @include prefixed(transition-duration, 0.5s);\n        @include prefixed(transition-property, color);\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            color: #0F9E5E; } } }\n",
		"// Icon Float Away\n@include keyframes(#{$nameSpace}-icon-float-away) {\n    0% {\n        opacity: 1; }\n    100% {\n        @include prefixed(transform, translateY(-1em));\n        opacity: 0; } }\n\n// Icon Float Away\n@mixin icon-float-away {\n    @include hacks();\n    position: relative;\n    padding-right: #{$spaceBetweenTextAndArrows};\n\n    &::before,\n    &::after {\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    &::after {\n        @include prefixed(animation-duration, #{$slowDuration});\n        @include prefixed(animation-fill-mode, forwards);\n        opacity: 0; }\n\n    #{$hover-states} {\n        &::after {\n            @include prefixed(animation-name, #{$nameSpace}-icon-float-away);\n            @include prefixed(animation-timing-function, ease-out); } } }\n",
		"// Icon Sink Away\n@include keyframes(#{$nameSpace}-icon-sink-away) {\n    0% {\n        opacity: 1; }\n    100% {\n        @include prefixed(transform, translateY(1em));\n        opacity: 0; } }\n\n// Icon Sink Away\n@mixin icon-sink-away {\n    @include hacks();\n    position: relative;\n    padding-right: #{$spaceBetweenTextAndArrows};\n\n    &::before,\n    &::after {\n        @include prefixed(transform, translateZ(0));\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    &::after {\n        @include prefixed(animation-duration, #{$slowDuration});\n        @include prefixed(animation-fill-mode, forwards);\n        opacity: 0; }\n\n    #{$hover-states} {\n        &::after {\n            @include prefixed(animation-name, #{$nameSpace}-icon-sink-away);\n            @include prefixed(animation-timing-function, ease-out); } } }\n",
		"// Icon Grow\n@mixin icon-grow {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    position: relative;\n    padding-right: #{$spaceBetweenTextAndArrows};\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        @include prefixed(transition-duration, $mediumDuration);\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-timing-function, ease-out);\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(transform, scale(1.3) translateZ(0)); } } }\n",
		"// Icon Shrink\n@mixin icon-shrink {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    position: relative;\n    padding-right: #{$spaceBetweenTextAndArrows};\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        @include prefixed(transition-duration, $mediumDuration);\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-timing-function, ease-out);\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n\n        &::before {\n            @include prefixed(transform, scale(0.8)); } } }\n",
		"// Icon Pulse\n@include keyframes(#{$nameSpace}-icon-pulse) {\n    25% {\n        @include prefixed(transform, scale(1.3)); }\n    75% {\n        @include prefixed(transform, scale(0.8)); } }\n\n@mixin icon-pulse {\n    @include hacks();\n    position: relative;\n    padding-right: #{$spaceBetweenTextAndArrows};\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        @include prefixed(transition-timing-function, ease-out);\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(animation-name, #{$nameSpace}-icon-pulse);\n            @include prefixed(animation-duration, 1s);\n            @include prefixed(animation-timing-function, linear);\n            @include prefixed(animation-iteration-count, infinite); } } }\n",
		"// Icon Pulse Grow\n@include keyframes(#{$nameSpace}-icon-pulse-grow) {\n    to {\n        @include prefixed(transform, scale(1.3)); } }\n\n@mixin icon-pulse-grow {\n    @include hacks();\n    position: relative;\n    padding-right: #{$spaceBetweenTextAndArrows};\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        @include prefixed(transition-timing-function, ease-out);\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(animation-name, #{$nameSpace}-icon-pulse-grow);\n            @include prefixed(animation-duration, $mediumDuration);\n            @include prefixed(animation-timing-function, linear);\n            @include prefixed(animation-iteration-count, infinite);\n            @include prefixed(animation-direction, alternate); } } }\n",
		"// Icon Pulse Shrink\n@include keyframes(#{$nameSpace}-icon-pulse-shrink) {\n    to {\n        @include prefixed(transform, scale(0.8)); } }\n\n@mixin icon-pulse-shrink {\n    @include hacks();\n    position: relative;\n    padding-right: #{$spaceBetweenTextAndArrows};\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        @include prefixed(transition-timing-function, ease-out);\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(animation-name, #{$nameSpace}-icon-pulse-shrink);\n            @include prefixed(animation-duration, $mediumDuration);\n            @include prefixed(animation-timing-function, linear);\n            @include prefixed(animation-iteration-count, infinite);\n            @include prefixed(animation-direction, alternate); } } }\n",
		"// Icon Push\n@include keyframes(#{$nameSpace}-icon-push) {\n    50% {\n        @include prefixed(transform, scale(0.5)); } }\n\n@mixin icon-push {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    position: relative;\n    padding-right: #{$spaceBetweenTextAndArrows};\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        @include prefixed(transition-duration, $mediumDuration);\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-timing-function, ease-out);\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(animation-name, #{$nameSpace}-icon-push);\n            @include prefixed(animation-duration, $mediumDuration);\n            @include prefixed(animation-timing-function, linear);\n            @include prefixed(animation-iteration-count, 1); } } }\n",
		"// Icon Pop\n@include keyframes(#{$nameSpace}-icon-pop) {\n    50% {\n        @include prefixed(transform, scale(1.5)); } }\n\n@mixin icon-pop {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    position: relative;\n    padding-right: #{$spaceBetweenTextAndArrows};\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        @include prefixed(transition-duration, $mediumDuration);\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-timing-function, ease-out);\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(animation-name, #{$nameSpace}-icon-pop);\n            @include prefixed(animation-duration, $mediumDuration);\n            @include prefixed(animation-timing-function, linear);\n            @include prefixed(animation-iteration-count, 1); } } }\n",
		"// Icon Bounce\n\n@mixin icon-bounce {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    position: relative;\n    padding-right: #{$spaceBetweenTextAndArrows};\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        @include prefixed(transition-duration, $mediumDuration);\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-timing-function, ease-out);\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(transform, scale(1.5));\n            @include prefixed(transition-timing-function, cubic-bezier(0.47,2.02,0.31,-0.36)); } } }\n",
		"// Icon Rotate\n@mixin icon-rotate {\n    $duration: $mediumDuration;\n    @include hacks();\n    @include prefixed(transition-duration, $duration);\n    position: relative;\n    padding-right: #{$spaceBetweenTextAndArrows};\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        @include prefixed(transition-duration, $duration);\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-timing-function, ease-out);\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(transform, rotate(20deg)); } } }\n",
		"// Icon Grow Rotate\n@mixin icon-grow-rotate {\n    $duration: $mediumDuration;\n    @include hacks();\n    @include prefixed(transition-duration, $duration);\n    position: relative;\n    padding-right: #{$spaceBetweenTextAndArrows};\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        @include prefixed(transition-duration, $duration);\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-timing-function, ease-out);\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(transform, scale(1.5) rotate(12deg)); } } }\n",
		"// Icon Float\n@mixin icon-float {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    position: relative;\n    padding-right: 2.2em;\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        @include prefixed(transition-duration, $mediumDuration);\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-timing-function, ease-out);\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(transform, translateY(-4px)); } } }\n",
		"// Icon Sink\n@mixin icon-sink {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    position: relative;\n    padding-right: 2.2em;\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        @include prefixed(transition-duration, $mediumDuration);\n        @include prefixed(transition-property, transform);\n        @include prefixed(transition-timing-function, ease-out);\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(transform, translateY(4px)); } } }\n",
		"// Icon Bob\n@include keyframes(#{$nameSpace}-icon-bob) {\n    0% {\n        @include prefixed(transform, translateY(-6px)); }\n    50% {\n        @include prefixed(transform, translateY(-2px)); }\n    100% {\n        @include prefixed(transform, translateY(-6px)); } }\n\n@include keyframes(#{$nameSpace}-icon-bob-float) {\n    100% {\n        @include prefixed(transform, translateY(-6px)); } }\n\n@mixin icon-bob {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    position: relative;\n    padding-right: 2.2em;\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(animation-name, \"#{$nameSpace}-icon-bob-float, #{$nameSpace}-icon-bob\");\n            @include prefixed(animation-duration, \".3s, 1.5s\");\n            @include prefixed(animation-delay, \"0s, .3s\");\n            @include prefixed(animation-timing-function, \"ease-out, ease-in-out\");\n            @include prefixed(animation-iteration-count, \"1, infinite\");\n            @include prefixed(animation-fill-mode, \"forwards\");\n            @include prefixed(animation-direction, \"normal, alternate\"); } } }\n",
		"// Icon Hang\n@include keyframes(#{$nameSpace}-icon-hang) {\n    0% {\n        @include prefixed(transform, translateY(6px)); }\n    50% {\n        @include prefixed(transform, translateY(2px)); }\n    100% {\n        @include prefixed(transform, translateY(6px)); } }\n\n@include keyframes(#{$nameSpace}-icon-hang-sink) {\n    100% {\n        @include prefixed(transform, translateY(6px)); } }\n\n@mixin icon-hang {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    position: relative;\n    padding-right: 2.2em;\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(animation-name, \"#{$nameSpace}-icon-hang-sink, #{$nameSpace}-icon-hang\");\n            @include prefixed(animation-duration, \".3s, 1.5s\");\n            @include prefixed(animation-delay, \"0s, .3s\");\n            @include prefixed(animation-timing-function, \"ease-out, ease-in-out\");\n            @include prefixed(animation-iteration-count, \"1, infinite\");\n            @include prefixed(animation-fill-mode, \"forwards\");\n            @include prefixed(animation-direction, \"normal, alternate\"); } } }\n",
		"// Icon Wobble Horizontal\n@include keyframes(#{$nameSpace}-icon-wobble-horizontal) {\n    16.65% {\n        @include prefixed(transform, translateX(6px)); }\n    33.3% {\n        @include prefixed(transform, translateX(-5px)); }\n    49.95% {\n        @include prefixed(transform, translateX(4px)); }\n    66.6% {\n        @include prefixed(transform, translateX(-2px)); }\n    83.25% {\n        @include prefixed(transform, translateX(1px)); }\n    100% {\n        @include prefixed(transform, translateX(0)); } }\n\n@mixin icon-wobble-horizontal {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    position: relative;\n    padding-right: 2.2em;\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(animation-name, #{$nameSpace}-icon-wobble-horizontal);\n            @include prefixed(animation-duration, 1s);\n            @include prefixed(animation-timing-function, ease-in-out);\n            @include prefixed(animation-iteration-count, 1); } } }\n",
		"// Icon Wobble Vertical\n@include keyframes(#{$nameSpace}-icon-wobble-vertical) {\n    16.65% {\n        @include prefixed(transform, translateY(6px)); }\n    33.3% {\n        @include prefixed(transform, translateY(-5px)); }\n    49.95% {\n        @include prefixed(transform, translateY(4px)); }\n    66.6% {\n        @include prefixed(transform, translateY(-2px)); }\n    83.25% {\n        @include prefixed(transform, translateY(1px)); }\n    100% {\n        @include prefixed(transform, translateY(0)); } }\n\n@mixin icon-wobble-vertical {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    position: relative;\n    padding-right: 2.2em;\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(animation-name, #{$nameSpace}-icon-wobble-vertical);\n            @include prefixed(animation-duration, 1s);\n            @include prefixed(animation-timing-function, ease-in-out);\n            @include prefixed(animation-iteration-count, 1); } } }\n",
		"// Icon Buzz\n@include keyframes(#{$nameSpace}-icon-buzz) {\n    50% {\n        @include prefixed(transform, translateX(3px) rotate(2deg)); }\n    100% {\n        @include prefixed(transform, translateX(-3px) rotate(-2deg)); } }\n\n@mixin icon-buzz {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    position: relative;\n    padding-right: 2.2em;\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(animation-name, #{$nameSpace}-icon-buzz);\n            @include prefixed(animation-duration, 0.15s);\n            @include prefixed(animation-timing-function, linear);\n            @include prefixed(animation-iteration-count, infinite); } } }\n",
		"// Icon Buzz Out\n@include keyframes(#{$nameSpace}-icon-buzz-out) {\n    10% {\n        @include prefixed(transform, translateX(3px) rotate(2deg)); }\n    20% {\n        @include prefixed(transform, translateX(-3px) rotate(-2deg)); }\n    30% {\n        @include prefixed(transform, translateX(3px) rotate(2deg)); }\n    40% {\n        @include prefixed(transform, translateX(-3px) rotate(-2deg)); }\n    50% {\n        @include prefixed(transform, translateX(2px) rotate(1deg)); }\n    60% {\n        @include prefixed(transform, translateX(-2px) rotate(-1deg)); }\n    70% {\n        @include prefixed(transform, translateX(2px) rotate(1deg)); }\n    80% {\n        @include prefixed(transform, translateX(-2px) rotate(-1deg)); }\n    90% {\n        @include prefixed(transform, translateX(1px) rotate(0)); }\n    100% {\n        @include prefixed(transform, translateX(-1px) rotate(0)); } }\n\n@mixin icon-buzz-out {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    position: relative;\n    padding-right: 2.2em;\n\n    &::before {\n        @include prefixed(transform, translateZ(0));\n        content: '';\n        position: absolute;\n        right: 1em;\n        padding: 0 1px; }\n\n    #{$hover-states} {\n        &::before {\n            @include prefixed(animation-name, #{$nameSpace}-icon-buzz-out);\n            @include prefixed(animation-duration, 0.75s);\n            @include prefixed(animation-timing-function, linear);\n            @include prefixed(animation-iteration-count, 1); } } }\n",
		"/* SHADOW/GLOW TRANSITIONS */\n@import \"shadow-and-glow-transitions/glow\";\n\n@import \"shadow-and-glow-transitions/shadow\";\n\n@import \"shadow-and-glow-transitions/grow-shadow\";\n\n@import \"shadow-and-glow-transitions/box-shadow-outset\";\n\n@import \"shadow-and-glow-transitions/box-shadow-inset\";\n\n@import \"shadow-and-glow-transitions/float-shadow\";\n\n@import \"shadow-and-glow-transitions/shadow-radial\";\n",
		"// Glow\n@mixin glow {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    @include prefixed(transition-property, box-shadow);\n\n    #{$hover-states} {\n        box-shadow: 0 0 8px $shadowColor; } }\n",
		"// Shadow\n@mixin shadow {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    @include prefixed(transition-property, box-shadow);\n\n    #{$hover-states} {\n        box-shadow: 0 10px 10px -10px rgba(0, 0, 0, 0.5); } }\n",
		"// Grow Shadow\n@mixin grow-shadow {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    @include prefixed(transition-property, \"box-shadow, transform\");\n\n    #{$hover-states} {\n        box-shadow: 0 10px 10px -10px rgba(0, 0, 0, 0.5);\n        @include prefixed(transform, scale(1.1)); } }\n",
		"// Box Shadow Outset\n@mixin box-shadow-outset {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    @include prefixed(transition-property, box-shadow);\n\n    #{$hover-states} {\n        box-shadow: 2px 2px 2px $shadowColor; } }\n",
		"// Box Shadow Inset\n@mixin box-shadow-inset {\n    @include hacks();\n    @include prefixed(transition-duration, $mediumDuration);\n    @include prefixed(transition-property, box-shadow);\n\n    box-shadow: inset 0 0 0 $shadowColor, {\n        0 0 1px rgba(0, 0, 0, 0) {} } // Hack to improve aliasing on mobile/tablet devices\n\n    #{$hover-states} {\n        box-shadow: inset 2px 2px 2px $shadowColor,\n        0 0 1px rgba(0, 0, 0, 0) {} } } // Hack to improve aliasing on mobile/tablet devices\n",
		"// Float Shadow\n@mixin float-shadow {\n    @include hacks();\n    position: relative;\n    @include prefixed(transition-duration, $mediumDuration);\n    @include prefixed(transition-property, transform);\n\n    &::before {\n        pointer-events: none;\n        position: absolute;\n        z-index: -1;\n        content: '';\n        top: 100%;\n        left: 5%;\n        height: 10px;\n        width: 90%;\n        opacity: 0;\n        background: -webkit-radial-gradient(center, ellipse, rgba(0,0,0,.35) 0%, rgba(0, 0, 0, 0) 80%);\n        background: radial-gradient(ellipse at center, rgba(0,0,0,.35) 0%,rgba(0,0,0,0) 80%); // W3C\n        @include prefixed(transition-duration, $mediumDuration);\n        @include prefixed(transition-property, \"transform, opacity\"); }\n\n    #{$hover-states} {\n        @include prefixed(transform, translateY(-5px)); // move the element up by 5px\n\n        &::before {\n            opacity: 1;\n            @include prefixed(transform, translateY(5px)); } } } // move the element down by 5px (it will stay in place because it's attached to the element that also moves up 5px)\n",
		"// Shadow Radial\n@mixin shadow-radial {\n    @include hacks();\n    position: relative;\n\n    &::before,\n    &::after {\n      pointer-events: none;\n      position: absolute;\n      content: '';\n      left: 0;\n      width: 100%;\n      box-sizing: border-box;\n      background-repeat: no-repeat;\n      height: 5px;\n      opacity: 0;\n      @include prefixed(transition-duration, $mediumDuration);\n      @include prefixed(transition-property, opacity); }\n\n    &::before {\n      bottom: 100%;\n      background: -webkit-radial-gradient(50% 150%, ellipse, $shadowColor 0%, rgba(0, 0, 0, 0) 80%);\n      background: radial-gradient(ellipse at 50% 150%, $shadowColor 0%, rgba(0, 0, 0, 0) 80%); }\n\n    &::after {\n      top: 100%;\n      background: -webkit-radial-gradient(50% -50%, ellipse, $shadowColor 0%, rgba(0, 0, 0, 0) 80%);\n      background: radial-gradient(ellipse at 50% -50%, $shadowColor 0%, rgba(0, 0, 0, 0) 80%); }\n\n    &:hover::before,\n    &:focus::before,\n    &:active::before,\n    &:hover::after,\n    &:focus::after,\n    &:active::after {\n      opacity: 1; } }\n",
		"/* SPEECH BUBBLES */\n@import \"speech-bubbles/bubble-top\";\n\n@import \"speech-bubbles/bubble-right\";\n\n@import \"speech-bubbles/bubble-bottom\";\n\n@import \"speech-bubbles/bubble-left\";\n\n@import \"speech-bubbles/bubble-float-top\";\n\n@import \"speech-bubbles/bubble-float-right\";\n\n@import \"speech-bubbles/bubble-float-bottom\";\n\n@import \"speech-bubbles/bubble-float-left\";\n",
		"// Bubble Top\n@mixin bubble-top {\n    @include hacks();\n    position: relative;\n\n    &::before {\n        pointer-events: none;\n        position: absolute;\n        z-index: -1;\n        content: '';\n        border-style: solid;\n        @include prefixed(transition-duration, $mediumDuration);\n        @include prefixed(transition-property, transform);\n        left: calc(50% - #{$tipWidth});\n        top: 0;\n        border-width: 0 $tipWidth $tipHeight $tipWidth;\n        border-color: transparent transparent $tipColor transparent; }\n\n    &:hover::before,\n    &:focus::before,\n    &:active::before {\n        @include prefixed(transform, translateY(-($tipHeight))); } }\n",
		"// Bubble Right\n@mixin bubble-right {\n    @include hacks();\n    position: relative;\n\n    &::before {\n        pointer-events: none;\n        position: absolute;\n        z-index: -1;\n        content: '';\n        border-style: solid;\n        @include prefixed(transition-duration, $mediumDuration);\n        @include prefixed(transition-property, transform);\n        top: calc(50% - #{$tipHeight});\n        right: 0;\n        border-width: $tipHeight 0 $tipHeight $tipWidth;\n        border-color: transparent transparent transparent $tipColor; }\n\n    &:hover::before,\n    &:focus::before,\n    &:active::before {\n        @include prefixed(transform, translateX($tipWidth)); } }\n",
		"// Bubble Bottom\n@mixin bubble-bottom {\n    @include hacks();\n    position: relative;\n\n    &::before {\n        pointer-events: none;\n        position: absolute;\n        z-index: -1;\n        content: '';\n        border-style: solid;\n        @include prefixed(transition-duration, $mediumDuration);\n        @include prefixed(transition-property, transform);\n        left: calc(50% - #{$tipWidth});\n        bottom: 0;\n        border-width: $tipHeight $tipWidth 0 $tipWidth;\n        border-color: $tipColor transparent transparent transparent; }\n\n    &:hover::before,\n    &:focus::before,\n    &:active::before {\n        @include prefixed(transform, translateY($tipHeight)); } }\n",
		"// Bubble Left\n@mixin bubble-left {\n    @include hacks();\n    position: relative;\n\n    &::before {\n        pointer-events: none;\n        position: absolute;\n        z-index: -1;\n        content: '';\n        border-style: solid;\n        @include prefixed(transition-duration, $mediumDuration);\n        @include prefixed(transition-property, transform);\n        top: calc(50% - #{$tipHeight});\n        left: 0;\n        border-width: $tipHeight $tipWidth $tipHeight 0;\n        border-color: transparent $tipColor transparent transparent; }\n\n    &:hover::before,\n    &:focus::before,\n    &:active::before {\n        @include prefixed(transform, translateX(-($tipWidth))); } }\n",
		"// Bubble Float Top\n@mixin bubble-float-top {\n    @include hacks();\n    position: relative;\n    @include prefixed(transition-duration, $mediumDuration);\n    @include prefixed(transition-property, transform);\n\n    &::before {\n        position: absolute;\n        z-index: -1;\n        content: '';\n        left: calc(50% - #{$tipWidth});\n        top: 0;\n        border-style: solid;\n        border-width: 0 $tipWidth $tipHeight $tipWidth;\n        border-color: transparent transparent $tipColor transparent;\n        @include prefixed(transition-duration, $mediumDuration);\n        @include prefixed(transition-property, transform); }\n\n    #{$hover-states} {\n        @include prefixed(transform, translateY($tipHeight));\n\n        &::before {\n            @include prefixed(transform, translateY(-($tipHeight))); } } }\n",
		"// Bubble Float Right\n@mixin bubble-float-right {\n    @include hacks();\n    position: relative;\n    @include prefixed(transition-duration, $mediumDuration);\n    @include prefixed(transition-property, transform);\n\n    &::before {\n        position: absolute;\n        z-index: -1;\n        top: calc(50% - #{$tipHeight});\n        right: 0;\n        content: '';\n        border-style: solid;\n        border-width: $tipHeight 0 $tipHeight $tipWidth;\n        border-color: transparent transparent transparent $tipColor;\n        @include prefixed(transition-duration, $mediumDuration);\n        @include prefixed(transition-property, transform); }\n\n    #{$hover-states} {\n        @include prefixed(transform, translateX(-($tipWidth)));\n\n        &::before {\n            @include prefixed(transform, translateX($tipWidth)); } } }\n",
		"// Bubble Float Bottom\n@mixin bubble-float-bottom {\n    @include hacks();\n    position: relative;\n    @include prefixed(transition-duration, $mediumDuration);\n    @include prefixed(transition-property, transform);\n\n    &::before {\n        position: absolute;\n        z-index: -1;\n        content: '';\n        left: calc(50% - #{$tipWidth});\n        bottom: 0;\n        border-style: solid;\n        border-width: $tipHeight $tipWidth 0 $tipWidth;\n        border-color: $tipColor transparent transparent transparent;\n        @include prefixed(transition-duration, $mediumDuration);\n        @include prefixed(transition-property, transform); }\n\n    #{$hover-states} {\n        @include prefixed(transform, translateY(-($tipHeight)));\n\n        &::before {\n            @include prefixed(transform, translateY($tipHeight)); } } }\n",
		"// Bubble Float Left\n@mixin bubble-float-left {\n    @include hacks();\n    position: relative;\n    @include prefixed(transition-duration, $mediumDuration);\n    @include prefixed(transition-property, transform);\n\n    &::before {\n        position: absolute;\n        z-index: -1;\n        content: '';\n        top: calc(50% - #{$tipHeight});\n        left: 0;\n        border-style: solid;\n        border-width: $tipHeight $tipWidth $tipHeight 0;\n        border-color: transparent $tipColor transparent transparent;\n        @include prefixed(transition-duration, $mediumDuration);\n        @include prefixed(transition-property, transform); }\n\n    #{$hover-states} {\n        @include prefixed(transform, translateX($tipWidth));\n\n        &::before {\n            @include prefixed(transform, translateX(-($tipWidth))); } } }\n",
		"@import \"state-transitions/animate-transition\";\n@import \"state-transitions/expand-from\";\n@import \"state-transitions/shrink-to\";\n",
		"// Simplified transition mixin allows you to set 4 transition properties at once and will\n// output vendor prefixes\n\n// Animate-transition can be added to any element that has more than one state\n// For example it can be added to a button that changes color on :hover\n// .button\n//     @include animate-transition\n//     background: blue\n//     &:hover\n//         background: green\n// This will create a much softer transition from the blue background to the green than you\n// would get without adding the transition mixin\n\n// The 4 properties of the transition can be customised to suit your needs.\n\n// Say you have the following styles applied to a button element:\n// .button\n//     color: white\n//     background: blue\n//     &:hover\n//         color: black\n//         background: green\n// Rather than transition both the background and the color you can specify\n// which property should be affected by the transition\n//     @include animate-transition(color)\n// Will only put the transition on the text color, not the background property\n\n// You can also change the duration of the transition, the timing-function (ease-in, ease-out, linear, etc.)\n// and add a delay if necessary.\n\n// For example the following will transition the background property only, will take 0.4s,\n// with no easing (linear) and a 0.1s delay:\n// .button\n//     @include animate-transition(background, 0.4s, linear, 0.1s)\n//     color: white\n//     background: blue\n//     &:hover\n//         color: black\n//         background: green\n// So if you hover over that button element the text color will instantly change from white to black\n// and after 0.1s the background color will take 0.4s to transition from blue to green.\n\n@mixin animate-transition($property: all, $duration: 0.3s, $timing-function: ease, $delay: 0s) {\n    @include transition-property($property);\n    @include transition-duration($duration);\n    @include transition-timing-function($timing-function);\n    @include transition-delay($delay); }\n",
		"// Can be used to animate hidden content that appears on click / hover so\n// that it appears to be expanding from a specific point of origin\n\n// Arguments:\n// axis = x (horizontal), y (vertical), both\n// duration = time in s or ms\n// timing-function = ease, ease-in, linear, cubic-bezier, etc.\n// iteration-count = integer, infinite (how many times should the animation be played)\n// origin = transform-origin property, top, left, center, if axis is set to both origin\n//     can be up to 2 values (top left, bottom center, etc.)\n\n// A note about origin:\n// expand from, shrink to\n// So expand-from with `$origin: top` expands from the top to the bottom,\n// shrink-to with `$origin: top` shrinks to the top from the bottom.\n\n// Can be paired with shrink-to mixin to expand and then shrink content when classes are added\n// .element\n//     .expand-class\n//         @include expand(y, 1s, ease, 1, top)\n//     .shrink-class\n//         @include shrink(y, 1s, ease, 1, top)\n// Will create an element that expands from the top when .expand-class is added\n// and then shrink back to the top when .shrink-class is added\n\n@include keyframes(expand) {\n    0% {\n        transform: scale(0); }\n    100% {\n        transform: scale(1); } }\n\n@include keyframes(expand-y) {\n    0% {\n        transform: scaleY(0); }\n    100% {\n        transform: scaleY(1); } }\n\n@include keyframes(expand-x) {\n    0% {\n        transform: scaleX(0); }\n    100% {\n        transform: scaleX(1); } }\n\n@mixin expand-from($axis, $duration, $timing-function, $iteration-count, $origin: center) {\n    transform-origin: $origin;\n    @include animation(expand-#{$axis} $duration $timing-function $iteration-count); }\n",
		"// Can be used to animate content that is hidden on click / hover so\n// that it appears to be shrinking back to a specific point of origin\n\n// Arguments:\n// axis = x (horizontal), y (vertical), both\n// duration = time in s or ms\n// timing-function = ease, ease-in, linear, cubic-bezier, etc.\n// iteration-count = integer, infinite (how many times should the animation be played)\n// origin = transform-origin property, top, left, center, if axis is set to both origin\n//     can be up to 2 values (top left, bottom center, etc.)\n\n// A note about origin:\n// expand from, shrink to\n// So expand-form with `$origin: top` expands from the top to the bottom,\n// shrink-to with `$origin: top` shrinks to the top from the bottom.\n\n// Can be paired with expand mixin to expand-from and then shrink content when classes are added\n// .element\n//     .expand-class\n//         @include expand(y, 1s, ease, 1, top)\n//     .shrink-class\n//         @include shrink(y, 1s, ease, 1, top)\n// Will create an element that expands from the top when .expand-class is added\n// and then shrink back to the top when .shrink-class is added\n\n@include keyframes(shrink) {\n    0% {\n        transform: scale(1); }\n    100% {\n        transform: scale(0); } }\n\n@include keyframes(shrink-y) {\n    0% {\n        transform: scaleY(1); }\n    100% {\n        transform: scaleY(0); } }\n\n@include keyframes(shrink-x) {\n    0% {\n        transform: scaleX(1); }\n    100% {\n        transform: scaleX(0); } }\n\n@mixin shrink-to($axis, $duration, $timing-function, $iteration-count, $origin: center) {\n    transform-origin: $origin;\n    @include animation(shrink-#{$axis} $duration $timing-function $iteration-count); }\n",
		"@import \"variables\";\n@import \"functions/em\";\n@import \"functions/rem\";\n@import \"functions/headings\";\n@import \"functions/url-functions\";\n",
		"// Set default Incuna-sass variables here\n// This way we can import incuna-sass files above\n// locally defined variables without getting errors\n\n// THESE VARIABLES CAN AND SHOULD BE OVERWRITTEN LOCALLY\n\n// Used in:\n//      forms.sass\n//      em.sass\n//      rem.sass\n$font-base: 16px !default;\n\n// Used in:\n//     datepicker.sass\n//     flowplayer.sass\n//     modal.sass\n//     articles.sass\n//     dashboard.sass\n//     reminders.sass\n$site-padding: 25px !default;\n\n// Used in:\n//  // normalise.sass\n//  // font-face.sass\n$project: none !default;\n",
		"// Output pixel font sizes in ems from $font-base\n@function em($target, $context: $font-base) {\n    @if $target == 0 {\n        @return 0; }\n    @return $target / $context + 0em; }\n",
		"// Output pixel font sizes in rems from $font-base\n// Recommended polyfill: https://github.com/chuckcarpenter/REM-unit-polyfill\n$use-rem: false !default;\n@function rem($target, $context: $font-base) {\n    @if $use-rem {\n        @if $target == 0 {\n            @return 0; }\n        @return $target / $context + 0rem; }\n    @else {\n        @return $target; } }\n",
		"// Sass function to loop through H tags\n\n// Call it passing 2 numeric arguments. For example,\n//    #{headings(1,4)}\n//      color: red\n// would output:\n//    h1, h2, h3, h4\n//      color: red\n\n@function headings($from:1, $to:6) {\n    @if $from == $to {\n        @return 'h#{$from}'; }\n    @else {\n        @return 'h#{$from},' + headings($from+1, $to); } }\n",
		"// The following variables can be overwritten locally to create\n// custom url paths for each function\n\n$relative-image-dir: '../images/' !default;\n$relative-font-dir: '../fonts/' !default;\n$relative-svg-dir: '../images/svg/' !default;\n\n// Set file path for fonts so you can use font-url\n@function font-url($path) {\n    @return url($relative-font-dir + $path); }\n\n// Set file path for images so you can use image-url\n@function image-url($path) {\n    @return url($relative-image-dir + $path); }\n\n// Set file path for images so you can use image-url\n@function svg-url($path) {\n    @return url($relative-svg-dir + $path); }\n",
		"// ! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css\n\n// *\n//    * 1. Set default font family to sans-serif.\n//    * 2. Prevent iOS and IE text size adjust after device orientation change,\n//    *        without disabling user zoom.\n\nhtml {\n    font-family: sans-serif;\n    // 1\n    -ms-text-size-adjust: 100%;\n    // 2\n    -webkit-text-size-adjust: 100%;\n }    // 2\n\n// *\n//    * Remove default margin.\n\nbody {\n    margin: 0; }\n\n// HTML5 display definitions\n//        ==========================================================================\n\n// *\n//    * Correct `block` display not defined for any HTML5 element in IE 8/9.\n//    * Correct `block` display not defined for `details` or `summary` in IE 10/11\n//    * and Firefox.\n//    * Correct `block` display not defined for `main` in IE 11.\n\narticle, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {\n    display: block; }\n\n// *\n//    * 1. Correct `inline-block` display not defined in IE 8/9.\n//    * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\n\naudio, canvas, progress, video {\n    display: inline-block;\n    // 1\n    vertical-align: baseline;\n }    // 2\n\n// *\n//    * Prevent modern browsers from displaying `audio` without controls.\n//    * Remove excess height in iOS 5 devices.\n\naudio:not([controls]) {\n    display: none;\n    height: 0; }\n\n// *\n//    * Address `[hidden]` styling not present in IE 8/9/10.\n//    * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.\n\n[hidden], template {\n    display: none; }\n\n// Links\n//        ==========================================================================\n\n// *\n//    * Remove the gray background color from active links in IE 10.\n\na {\n    background-color: transparent;\n    &:active, &:hover {\n        outline: 0; } }\n\n// *\n//    * Improve readability of focused elements when they are also in an\n//    * active/hover state.\n\n// Text-level semantics\n//        ==========================================================================\n\n// *\n//    * Address styling not present in IE 8/9/10/11, Safari, and Chrome.\n\nabbr[title] {\n    border-bottom: 1px dotted; }\n\n// *\n//    * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\n\nb, strong {\n    font-weight: bold; }\n\n// *\n//    * Address styling not present in Safari and Chrome.\n\ndfn {\n    font-style: italic; }\n\n// *\n//    * Address variable `h1` font-size and margin within `section` and `article`\n//    * contexts in Firefox 4+, Safari, and Chrome.\n\nh1 {\n    font-size: 2em;\n    margin: 0.67em 0; }\n\n// *\n//    * Address styling not present in IE 8/9.\n\nmark {\n    background: #ff0;\n    color: #000; }\n\n// *\n//    * Address inconsistent and variable font size in all browsers.\n\nsmall {\n    font-size: 80%; }\n\n// *\n//    * Prevent `sub` and `sup` affecting `line-height` in all browsers.\n\nsub {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline; }\n\nsup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n    top: -0.5em; }\n\nsub {\n    bottom: -0.25em; }\n\n// Embedded content\n//        ==========================================================================\n\n// *\n//    * Remove border when inside `a` element in IE 8/9/10.\n\nimg {\n    border: 0; }\n\n// *\n//    * Correct overflow not hidden in IE 9/10/11.\n\nsvg:not(:root) {\n    overflow: hidden; }\n\n// Grouping content\n//        ==========================================================================\n\n// *\n//    * Address margin not present in IE 8/9 and Safari.\n\nfigure {\n    margin: 1em 40px; }\n\n// *\n//    * Address differences between Firefox and other browsers.\n\nhr {\n    box-sizing: content-box;\n    height: 0; }\n\n// *\n//    * Contain overflow in all browsers.\n\npre {\n    overflow: auto; }\n\n// *\n//    * Address odd `em`-unit font size rendering in all browsers.\n\ncode, kbd, pre, samp {\n    font-family: monospace, monospace;\n    font-size: 1em; }\n\n// Forms\n//        ==========================================================================\n\n// *\n//    * Known limitation: by default, Chrome and Safari on OS X allow very limited\n//    * styling of `select`, unless a `border` property is set.\n\n// *\n//    * 1. Correct color not being inherited.\n//    *        Known issue: affects color of disabled elements.\n//    * 2. Correct font properties not being inherited.\n//    * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\n\nbutton, input, optgroup, select, textarea {\n    color: inherit;\n    // 1\n    font: inherit;\n    // 2\n    margin: 0;\n }    // 3\n\n// *\n//    * Address `overflow` set to `hidden` in IE 8/9/10/11.\n\nbutton {\n    overflow: visible;\n    text-transform: none; }\n\n// *\n//    * Address inconsistent `text-transform` inheritance for `button` and `select`.\n//    * All other form control elements do not inherit `text-transform` values.\n//    * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\n//    * Correct `select` style inheritance in Firefox.\n\nselect {\n    text-transform: none; }\n\n// *\n//    * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\n//    *        and `video` controls.\n//    * 2. Correct inability to style clickable `input` types in iOS.\n//    * 3. Improve usability and consistency of cursor style between image-type\n//    *        `input` and others.\n\nbutton, html input[type=\"button\"] {\n    -webkit-appearance: button;\n    // 2\n    cursor: pointer;\n }    // 3\n\ninput {\n    &[type=\"reset\"], &[type=\"submit\"] {\n        -webkit-appearance: button;\n        // 2\n        cursor: pointer;\n } }        // 3\n\n// *\n//    * Re-set default cursor for disabled elements.\n\nbutton[disabled], html input[disabled] {\n    cursor: default; }\n\n// *\n//    * Remove inner padding and border in Firefox 4+.\n\nbutton::-moz-focus-inner {\n    border: 0;\n    padding: 0; }\n\ninput {\n    &::-moz-focus-inner {\n        border: 0;\n        padding: 0; }\n    line-height: normal;\n    &[type=\"checkbox\"], &[type=\"radio\"] {\n        box-sizing: border-box;\n        // 1\n        padding: 0;\n }        // 2\n    &[type=\"number\"] {\n        &::-webkit-inner-spin-button, &::-webkit-outer-spin-button {\n            height: auto; } }\n    &[type=\"search\"] {\n        -webkit-appearance: textfield;\n        // 1\n        box-sizing: content-box;\n        // 2\n        &::-webkit-search-cancel-button, &::-webkit-search-decoration {\n            -webkit-appearance: none; } } }\n\n// *\n//    * Address Firefox 4+ setting `line-height` on `input` using `!important` in\n//    * the UA stylesheet.\n\n// *\n//    * It's recommended that you don't attempt to style these elements.\n//    * Firefox's implementation doesn't respect box-sizing, padding, or width.\n//    *\n//    * 1. Address box sizing set to `content-box` in IE 8/9/10.\n//    * 2. Remove excess padding in IE 8/9/10.\n\n// *\n//    * Fix the cursor style for Chrome's increment/decrement buttons. For certain\n//    * `font-size` values of the `input`, it causes the cursor style of the\n//    * decrement button to change from `default` to `text`.\n\n// *\n//    * 1. Address `appearance` set to `searchfield` in Safari and Chrome.\n//    * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.\n\n// *\n//    * Remove inner padding and search cancel button in Safari and Chrome on OS X.\n//    * Safari (but not Chrome) clips the cancel button when the search input has\n//    * padding (and `textfield` appearance).\n\n// *\n//    * Define consistent border, margin, and padding.\n\nfieldset {\n    border: 1px solid #c0c0c0;\n    margin: 0 2px;\n    padding: 0.35em 0.625em 0.75em; }\n\n// *\n//    * 1. Correct `color` not being inherited in IE 8/9/10/11.\n//    * 2. Remove padding so people aren't caught out if they zero out fieldsets.\n\nlegend {\n    border: 0;\n    // 1\n    padding: 0;\n }    // 2\n\n// *\n//    * Remove default vertical scrollbar in IE 8/9/10/11.\n\ntextarea {\n    overflow: auto; }\n\n// *\n//    * Don't inherit the `font-weight` (applied by a rule above).\n//    * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\n\noptgroup {\n    font-weight: bold; }\n\n// Tables\n//        ==========================================================================\n\n// *\n//    * Remove most spacing between table cells.\n\ntable {\n    border-collapse: collapse;\n    border-spacing: 0; }\n\ntd, th {\n    padding: 0; }\n",
		"// Basic styles that we end up adding to all of our projects\n\nbody {\n    line-height: 1.4;\n    * {\n        box-sizing: border-box; } }\n\n// Overwrite browser button styles for all buttons\nbutton {\n    border: 0;\n    background: none;\n    padding: 0;\n    margin: 0; }\n",
		"$site-width: 1200px !default;\n\n$site-padding: 25px !default;\n$site-small-padding: 15px !default;\n",
		"$black: #000;\n$white: #fff;\n\n// Greys\n$base-grey: #7f7f7f !default;\n// light greys\n$grey-1: lighten($base-grey, 45%) !default;\n$grey-2: lighten($base-grey, 40%) !default;\n$grey-3: lighten($base-grey, 35%) !default;\n$grey-4: lighten($base-grey, 30%) !default;\n$grey-5: lighten($base-grey, 20%) !default;\n$grey-6: lighten($base-grey, 10%) !default;\n// base grey\n$grey-7: $base-grey !default;\n// dark greys\n$grey-8: darken($base-grey, 10%) !default;\n$grey-9: darken($base-grey, 20%) !default;\n$grey-10: darken($base-grey, 30%) !default;\n$grey-11: darken($base-grey, 40%) !default;\n",
		".style-guide-page {\n    .color {\n        display: inline-block;\n        margin: 10px;\n        text-align: center;\n        max-width: 80px;\n\n        .color-name {\n            font: {\n                size: 16px;\n                weight: bold; }\n            text-transform: capitalize; }\n\n        .hexcode {\n            font: {\n                size: 13px; } } }\n\n    .color-block {\n        display: block;\n        width: 80px;\n        height: 80px;\n        border-radius: 100%; }\n\n    .grey-1 {\n        .color-block {\n            background: $grey-1; } }\n    .grey-2 {\n        .color-block {\n            background: $grey-2; } }\n    .grey-3 {\n        .color-block {\n            background: $grey-3; } }\n    .grey-4 {\n        .color-block {\n            background: $grey-4; } }\n    .grey-5 {\n        .color-block {\n            background: $grey-5; } }\n    .grey-6 {\n        .color-block {\n            background: $grey-6; } }\n    .grey-7 {\n        .color-block {\n            background: $grey-7; } }\n    .grey-8 {\n        .color-block {\n            background: $grey-8; } }\n    .grey-9 {\n        .color-block {\n            background: $grey-9; } }\n    .grey-10 {\n        .color-block {\n            background: $grey-10; } }\n    .grey-11 {\n        .color-block {\n            background: $grey-11; } }\n\n    // Example colors\n    // Using these color names as they are unlikely to be used in any of\n    // our projects and hopefully won't cause conflicts\n    .color1 {\n        .color-block {\n            background: #206ba4; } }\n    .color2 {\n        .color-block {\n            background: #bbd9ee; } }\n    .color3 {\n        .color-block {\n            background: #ebf4fa; } }\n    .color4 {\n        .color-block {\n            background: #f8ddb3; } }\n    .color5 {\n        .color-block {\n            background: #e7e4d3; } }\n    .color6 {\n        .color-block {\n            background: #f1efe2; } }\n    .color7 {\n        .color-block {\n            background: #9c9f83; } }\n    .color8 {\n        .color-block {\n            background: #ab7e5b; } }\n    .color9 {\n        .color-block {\n            background: #5b755d; } } }\n",
		".style-guide-page {\n    .icon {\n        display: inline-block;\n        vertical-align: middle;\n        padding: 8px;\n        margin: 10px;\n        border: {\n            radius: 8px; }\n        background: $grey-3;\n\n        .icon-name,\n        .inline-svg {\n            display: inline-block;\n            vertical-align: middle; }\n\n        .inline-svg {\n            width: 15px;\n            height: 15px;\n            fill: $grey-8;\n            margin: {\n                left: 10px; } } } }\n",
		".style-guide-page {\n    button,\n    .button {\n        margin: 10px; } }\n",
		".style-guide-page {\n    font: {\n        family: 'Lato', sans-serif; }\n    * {\n        box-sizing: border-box; }\n\n    .structure {\n        max-width: $site-width;\n        margin: 0 auto;\n        position: relative;\n        padding: 0 $site-small-padding; } }\n\n.sg-header,\n.sg-footer {\n    .structure {\n        padding: 60px $site-small-padding; } }\n\n.sg-header {\n    background: $grey-10; }\n\n.sg-footer {\n    background: $grey-10;\n    color: $white;\n    margin: {\n        top: 100px; }\n    a {\n        color: $white; } }\n\n.sg-title,\n.sg-tagline {\n    color: $white;\n    text-shadow: 0px 0px 10px $grey-11; }\n\n.sg-title {\n    font: {\n        size: 42px;\n        weight: 700; } }\n\n.sg-tagline {\n    font: {\n        size: 24px;\n        weight: 300; } }\n\n.sg-main-content {\n    padding: {\n        top: 40px; }\n    position: relative; }\n\n.sg-intro {\n    padding: {\n        bottom: 40px; }\n    border: {\n        bottom: 3px solid $grey-3; } }\n\n.sg-main-section-title,\n.sg-section-header,\n.sg-section-sub-title {\n    padding: {\n        bottom: 10px; } }\n\n.sg-main-section-title {\n    border: {\n        bottom: 3px solid $grey-3; }\n    margin: {\n        top: 20px;\n        bottom: 60px; }\n    padding: {\n        bottom: 20px; }\n    text-align: center; }\n\n.sg-section-header {\n    border: {\n        bottom: 2px solid $grey-3; } }\n\n.sg-section-sub-title {\n    border: {\n        bottom: 1px solid $grey-3; }\n    margin: {\n        top: 30px; } }\n\n.sg-section {\n    margin: {\n        bottom: 60px; } }\n\n.sg-main-section {\n    padding: {\n        bottom: 40px; }\n    border: {\n        bottom: 3px solid $grey-3; }\n\n    &:last-of-type {\n        border: 0; } }\n\n.back-to-top {\n    position: fixed;\n    bottom: 20px;\n    right: 0; }\n"
	],
	"mappings": "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",
	"names": []
}